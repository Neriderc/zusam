{"mappings":"yUAuCAA,EArCqB,CACnBC,YAAW,CAAGC,EAAQC,KACpBA,EAASD","sources":["src/lazy/image-service.js"],"sourcesContent":["//const reduceImport = require(\"image-blob-reduce\");\n//const reduce = reduceImport.default();\nconst imageService = {\n  handleImage: (source, callback) => {\n    callback(source);\n    //let fileSize = source.size;\n    //try {\n    //  // don't use image reduction for iOS as it's problematic.\n    //  // TODO: Find a fix and test those platforms.\n    //  let iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n    //  if (iOS) {\n    //    console.warn(\"Do not use image reduction on iOS !\");\n    //    callback(source);\n    //    return;\n    //  }\n    //  if (!source.type || !source.type.match(/image/)) {\n    //    console.warn(\"Do not use image reduction on invalid file !\");\n    //    callback(source);\n    //    return;\n    //  }\n    //  if (source.type == \"image/gif\") {\n    //    console.warn(\"Do not use image reduction on a gif !\");\n    //    callback(source);\n    //    return;\n    //  }\n    //  if (fileSize < 1024 * 256) {\n    //    console.warn(\"Do not use image reduction on small file !\");\n    //    callback(source);\n    //    return;\n    //  }\n    //  reduce.toBlob(source, {max: 2048, unsharpAmount: 100, unsharpRadius: 1, quality: 2}).then(blob => callback(blob));\n    //} catch (error) {\n    //  // TODO error logging\n    //  console.warn(error);\n    //  // If something goes wrong in image reduction, fall back to normal upload\n    //  callback(source);\n    //}\n  }\n};\nexport default imageService;\n"],"names":["$598bc203b2e80304$export$2e2bcd8739ae039","handleImage","source","callback"],"version":3,"file":"image-service.815dd16d.js.map"}