{"version":3,"sources":["../node_modules/image-blob-reduce/lib/utils.js","../node_modules/pica/dist/pica.js","../node_modules/image-blob-reduce/lib/image_traverse.js","../node_modules/image-blob-reduce/lib/jpeg_plugins.js","../node_modules/image-blob-reduce/index.js","lazy/image-service.js"],"names":["imageService","reduce","require","handleImage","source","callback","fileSize","size","iOS","test","navigator","userAgent","window","MSStream","console","warn","type","match","toBlob","max","unsharpAmount","unsharpRadius","quality","then","blob","error"],"mappings":"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","file":"image-service.d985a8ca.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n\nmodule.exports.assign = function assign(to) {\n  var from;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (Object.prototype.hasOwnProperty.call(from, key)) to[key] = from[key];\n    }\n  }\n\n  return to;\n};\n\n\nfunction pick(from, props) {\n  var to = {};\n\n  props.forEach(function (key) {\n    if (Object.prototype.hasOwnProperty.call(from, key)) to[key] = from[key];\n  });\n\n  return to;\n}\n\n\nfunction pick_pica_resize_options(from) {\n  return pick(from, [\n    'alpha',\n    'unsharpAmount',\n    'unsharpRadius',\n    'unsharpThreshold',\n    'cancelToken'\n  ]);\n}\n\n\nmodule.exports.pick = pick;\nmodule.exports.pick_pica_resize_options = pick_pica_resize_options;\n","/*!\n\npica\nhttps://github.com/nodeca/pica\n\n*/\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.pica = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n// Collection of math functions\n//\n// 1. Combine components together\n// 2. Has async init to load wasm modules\n//\n'use strict';\n\nvar inherits = _dereq_('inherits');\n\nvar Multimath = _dereq_('multimath');\n\nvar mm_unsharp_mask = _dereq_('multimath/lib/unsharp_mask');\n\nvar mm_resize = _dereq_('./mm_resize');\n\nfunction MathLib(requested_features) {\n  var __requested_features = requested_features || [];\n\n  var features = {\n    js: __requested_features.indexOf('js') >= 0,\n    wasm: __requested_features.indexOf('wasm') >= 0\n  };\n  Multimath.call(this, features);\n  this.features = {\n    js: features.js,\n    wasm: features.wasm && this.has_wasm()\n  };\n  this.use(mm_unsharp_mask);\n  this.use(mm_resize);\n}\n\ninherits(MathLib, Multimath);\n\nMathLib.prototype.resizeAndUnsharp = function resizeAndUnsharp(options, cache) {\n  var result = this.resize(options, cache);\n\n  if (options.unsharpAmount) {\n    this.unsharp_mask(result, options.toWidth, options.toHeight, options.unsharpAmount, options.unsharpRadius, options.unsharpThreshold);\n  }\n\n  return result;\n};\n\nmodule.exports = MathLib;\n\n},{\"./mm_resize\":4,\"inherits\":15,\"multimath\":16,\"multimath/lib/unsharp_mask\":19}],2:[function(_dereq_,module,exports){\n// Resize convolvers, pure JS implementation\n//\n'use strict'; // Precision of fixed FP values\n//var FIXED_FRAC_BITS = 14;\n\nfunction clampTo8(i) {\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n} // Convolve image in horizontal directions and transpose output. In theory,\n// transpose allow:\n//\n// - use the same convolver for both passes (this fails due different\n//   types of input array and temporary buffer)\n// - making vertical pass by horisonltal lines inprove CPU cache use.\n//\n// But in real life this doesn't work :)\n//\n\n\nfunction convolveHorizontally(src, dest, srcW, srcH, destW, filters) {\n  var r, g, b, a;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0,\n      destOffset = 0; // For each row\n\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr = 0; // Apply precomputed filters to each destination row point\n\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize = filters[filterPtr++];\n      srcPtr = srcOffset + filterShift * 4 | 0;\n      r = g = b = a = 0; // Apply the filter to the row to get the destination pixel r, g, b, a\n\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++]; // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n\n        a = a + filterVal * src[srcPtr + 3] | 0;\n        b = b + filterVal * src[srcPtr + 2] | 0;\n        g = g + filterVal * src[srcPtr + 1] | 0;\n        r = r + filterVal * src[srcPtr] | 0;\n        srcPtr = srcPtr + 4 | 0;\n      } // Bring this value back in range. All of the filter scaling factors\n      // are in fixed point with FIXED_FRAC_BITS bits of fractional part.\n      //\n      // (!) Add 1/2 of value before clamping to get proper rounding. In other\n      // case brightness loss will be noticeable if you resize image with white\n      // border and place it on white background.\n      //\n\n\n      dest[destOffset + 3] = clampTo8(a + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset + 2] = clampTo8(b + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset + 1] = clampTo8(g + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset] = clampTo8(r + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      destOffset = destOffset + srcH * 4 | 0;\n    }\n\n    destOffset = (srcY + 1) * 4 | 0;\n    srcOffset = (srcY + 1) * srcW * 4 | 0;\n  }\n} // Technically, convolvers are the same. But input array and temporary\n// buffer can be of different type (especially, in old browsers). So,\n// keep code in separate functions to avoid deoptimizations & speed loss.\n\n\nfunction convolveVertically(src, dest, srcW, srcH, destW, filters) {\n  var r, g, b, a;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0,\n      destOffset = 0; // For each row\n\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr = 0; // Apply precomputed filters to each destination row point\n\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize = filters[filterPtr++];\n      srcPtr = srcOffset + filterShift * 4 | 0;\n      r = g = b = a = 0; // Apply the filter to the row to get the destination pixel r, g, b, a\n\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++]; // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n\n        a = a + filterVal * src[srcPtr + 3] | 0;\n        b = b + filterVal * src[srcPtr + 2] | 0;\n        g = g + filterVal * src[srcPtr + 1] | 0;\n        r = r + filterVal * src[srcPtr] | 0;\n        srcPtr = srcPtr + 4 | 0;\n      } // Bring this value back in range. All of the filter scaling factors\n      // are in fixed point with FIXED_FRAC_BITS bits of fractional part.\n      //\n      // (!) Add 1/2 of value before clamping to get proper rounding. In other\n      // case brightness loss will be noticeable if you resize image with white\n      // border and place it on white background.\n      //\n\n\n      dest[destOffset + 3] = clampTo8(a + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset + 2] = clampTo8(b + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset + 1] = clampTo8(g + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      dest[destOffset] = clampTo8(r + (1 << 13) >> 14\n      /*FIXED_FRAC_BITS*/\n      );\n      destOffset = destOffset + srcH * 4 | 0;\n    }\n\n    destOffset = (srcY + 1) * 4 | 0;\n    srcOffset = (srcY + 1) * srcW * 4 | 0;\n  }\n}\n\nmodule.exports = {\n  convolveHorizontally: convolveHorizontally,\n  convolveVertically: convolveVertically\n};\n\n},{}],3:[function(_dereq_,module,exports){\n// This is autogenerated file from math.wasm, don't edit.\n//\n'use strict';\n/* eslint-disable max-len */\n\nmodule.exports = 'AGFzbQEAAAABFAJgBn9/f39/fwBgB39/f39/f38AAg8BA2VudgZtZW1vcnkCAAEDAwIAAQQEAXAAAAcZAghjb252b2x2ZQAACmNvbnZvbHZlSFYAAQkBAArmAwLBAwEQfwJAIANFDQAgBEUNACAFQQRqIRVBACEMQQAhDQNAIA0hDkEAIRFBACEHA0AgB0ECaiESAn8gBSAHQQF0IgdqIgZBAmouAQAiEwRAQQAhCEEAIBNrIRQgFSAHaiEPIAAgDCAGLgEAakECdGohEEEAIQlBACEKQQAhCwNAIBAoAgAiB0EYdiAPLgEAIgZsIAtqIQsgB0H/AXEgBmwgCGohCCAHQRB2Qf8BcSAGbCAKaiEKIAdBCHZB/wFxIAZsIAlqIQkgD0ECaiEPIBBBBGohECAUQQFqIhQNAAsgEiATagwBC0EAIQtBACEKQQAhCUEAIQggEgshByABIA5BAnRqIApBgMAAakEOdSIGQf8BIAZB/wFIG0EQdEGAgPwHcUEAIAZBAEobIAtBgMAAakEOdSIGQf8BIAZB/wFIG0EYdEEAIAZBAEobciAJQYDAAGpBDnUiBkH/ASAGQf8BSBtBCHRBgP4DcUEAIAZBAEobciAIQYDAAGpBDnUiBkH/ASAGQf8BSBtB/wFxQQAgBkEAShtyNgIAIA4gA2ohDiARQQFqIhEgBEcNAAsgDCACaiEMIA1BAWoiDSADRw0ACwsLIQACQEEAIAIgAyAEIAUgABAAIAJBACAEIAUgBiABEAALCw==';\n\n},{}],4:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  name: 'resize',\n  fn: _dereq_('./resize'),\n  wasm_fn: _dereq_('./resize_wasm'),\n  wasm_src: _dereq_('./convolve_wasm_base64')\n};\n\n},{\"./convolve_wasm_base64\":3,\"./resize\":5,\"./resize_wasm\":8}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar createFilters = _dereq_('./resize_filter_gen');\n\nvar convolveHorizontally = _dereq_('./convolve').convolveHorizontally;\n\nvar convolveVertically = _dereq_('./convolve').convolveVertically;\n\nfunction resetAlpha(dst, width, height) {\n  var ptr = 3,\n      len = width * height * 4 | 0;\n\n  while (ptr < len) {\n    dst[ptr] = 0xFF;\n    ptr = ptr + 4 | 0;\n  }\n}\n\nmodule.exports = function resize(options) {\n  var src = options.src;\n  var srcW = options.width;\n  var srcH = options.height;\n  var destW = options.toWidth;\n  var destH = options.toHeight;\n  var scaleX = options.scaleX || options.toWidth / options.width;\n  var scaleY = options.scaleY || options.toHeight / options.height;\n  var offsetX = options.offsetX || 0;\n  var offsetY = options.offsetY || 0;\n  var dest = options.dest || new Uint8Array(destW * destH * 4);\n  var quality = typeof options.quality === 'undefined' ? 3 : options.quality;\n  var alpha = options.alpha || false;\n  var filtersX = createFilters(quality, srcW, destW, scaleX, offsetX),\n      filtersY = createFilters(quality, srcH, destH, scaleY, offsetY);\n  var tmp = new Uint8Array(destW * srcH * 4); // To use single function we need src & tmp of the same type.\n  // But src can be CanvasPixelArray, and tmp - Uint8Array. So, keep\n  // vertical and horizontal passes separately to avoid deoptimization.\n\n  convolveHorizontally(src, tmp, srcW, srcH, destW, filtersX);\n  convolveVertically(tmp, dest, srcH, destW, destH, filtersY); // That's faster than doing checks in convolver.\n  // !!! Note, canvas data is not premultipled. We don't need other\n  // alpha corrections.\n\n  if (!alpha) resetAlpha(dest, destW, destH);\n  return dest;\n};\n\n},{\"./convolve\":2,\"./resize_filter_gen\":6}],6:[function(_dereq_,module,exports){\n// Calculate convolution filters for each destination point,\n// and pack data to Int16Array:\n//\n// [ shift, length, data..., shift2, length2, data..., ... ]\n//\n// - shift - offset in src image\n// - length - filter length (in src points)\n// - data - filter values sequence\n//\n'use strict';\n\nvar FILTER_INFO = _dereq_('./resize_filter_info'); // Precision of fixed FP values\n\n\nvar FIXED_FRAC_BITS = 14;\n\nfunction toFixedPoint(num) {\n  return Math.round(num * ((1 << FIXED_FRAC_BITS) - 1));\n}\n\nmodule.exports = function resizeFilterGen(quality, srcSize, destSize, scale, offset) {\n  var filterFunction = FILTER_INFO[quality].filter;\n  var scaleInverted = 1.0 / scale;\n  var scaleClamped = Math.min(1.0, scale); // For upscale\n  // Filter window (averaging interval), scaled to src image\n\n  var srcWindow = FILTER_INFO[quality].win / scaleClamped;\n  var destPixel, srcPixel, srcFirst, srcLast, filterElementSize, floatFilter, fxpFilter, total, pxl, idx, floatVal, filterTotal, filterVal;\n  var leftNotEmpty, rightNotEmpty, filterShift, filterSize;\n  var maxFilterElementSize = Math.floor((srcWindow + 1) * 2);\n  var packedFilter = new Int16Array((maxFilterElementSize + 2) * destSize);\n  var packedFilterPtr = 0;\n  var slowCopy = !packedFilter.subarray || !packedFilter.set; // For each destination pixel calculate source range and built filter values\n\n  for (destPixel = 0; destPixel < destSize; destPixel++) {\n    // Scaling should be done relative to central pixel point\n    srcPixel = (destPixel + 0.5) * scaleInverted + offset;\n    srcFirst = Math.max(0, Math.floor(srcPixel - srcWindow));\n    srcLast = Math.min(srcSize - 1, Math.ceil(srcPixel + srcWindow));\n    filterElementSize = srcLast - srcFirst + 1;\n    floatFilter = new Float32Array(filterElementSize);\n    fxpFilter = new Int16Array(filterElementSize);\n    total = 0.0; // Fill filter values for calculated range\n\n    for (pxl = srcFirst, idx = 0; pxl <= srcLast; pxl++, idx++) {\n      floatVal = filterFunction((pxl + 0.5 - srcPixel) * scaleClamped);\n      total += floatVal;\n      floatFilter[idx] = floatVal;\n    } // Normalize filter, convert to fixed point and accumulate conversion error\n\n\n    filterTotal = 0;\n\n    for (idx = 0; idx < floatFilter.length; idx++) {\n      filterVal = floatFilter[idx] / total;\n      filterTotal += filterVal;\n      fxpFilter[idx] = toFixedPoint(filterVal);\n    } // Compensate normalization error, to minimize brightness drift\n\n\n    fxpFilter[destSize >> 1] += toFixedPoint(1.0 - filterTotal); //\n    // Now pack filter to useable form\n    //\n    // 1. Trim heading and tailing zero values, and compensate shitf/length\n    // 2. Put all to single array in this format:\n    //\n    //    [ pos shift, data length, value1, value2, value3, ... ]\n    //\n\n    leftNotEmpty = 0;\n\n    while (leftNotEmpty < fxpFilter.length && fxpFilter[leftNotEmpty] === 0) {\n      leftNotEmpty++;\n    }\n\n    if (leftNotEmpty < fxpFilter.length) {\n      rightNotEmpty = fxpFilter.length - 1;\n\n      while (rightNotEmpty > 0 && fxpFilter[rightNotEmpty] === 0) {\n        rightNotEmpty--;\n      }\n\n      filterShift = srcFirst + leftNotEmpty;\n      filterSize = rightNotEmpty - leftNotEmpty + 1;\n      packedFilter[packedFilterPtr++] = filterShift; // shift\n\n      packedFilter[packedFilterPtr++] = filterSize; // size\n\n      if (!slowCopy) {\n        packedFilter.set(fxpFilter.subarray(leftNotEmpty, rightNotEmpty + 1), packedFilterPtr);\n        packedFilterPtr += filterSize;\n      } else {\n        // fallback for old IE < 11, without subarray/set methods\n        for (idx = leftNotEmpty; idx <= rightNotEmpty; idx++) {\n          packedFilter[packedFilterPtr++] = fxpFilter[idx];\n        }\n      }\n    } else {\n      // zero data, write header only\n      packedFilter[packedFilterPtr++] = 0; // shift\n\n      packedFilter[packedFilterPtr++] = 0; // size\n    }\n  }\n\n  return packedFilter;\n};\n\n},{\"./resize_filter_info\":7}],7:[function(_dereq_,module,exports){\n// Filter definitions to build tables for\n// resizing convolvers.\n//\n// Presets for quality 0..3. Filter functions + window size\n//\n'use strict';\n\nmodule.exports = [{\n  // Nearest neibor (Box)\n  win: 0.5,\n  filter: function filter(x) {\n    return x >= -0.5 && x < 0.5 ? 1.0 : 0.0;\n  }\n}, {\n  // Hamming\n  win: 1.0,\n  filter: function filter(x) {\n    if (x <= -1.0 || x >= 1.0) {\n      return 0.0;\n    }\n\n    if (x > -1.19209290E-07 && x < 1.19209290E-07) {\n      return 1.0;\n    }\n\n    var xpi = x * Math.PI;\n    return Math.sin(xpi) / xpi * (0.54 + 0.46 * Math.cos(xpi / 1.0));\n  }\n}, {\n  // Lanczos, win = 2\n  win: 2.0,\n  filter: function filter(x) {\n    if (x <= -2.0 || x >= 2.0) {\n      return 0.0;\n    }\n\n    if (x > -1.19209290E-07 && x < 1.19209290E-07) {\n      return 1.0;\n    }\n\n    var xpi = x * Math.PI;\n    return Math.sin(xpi) / xpi * Math.sin(xpi / 2.0) / (xpi / 2.0);\n  }\n}, {\n  // Lanczos, win = 3\n  win: 3.0,\n  filter: function filter(x) {\n    if (x <= -3.0 || x >= 3.0) {\n      return 0.0;\n    }\n\n    if (x > -1.19209290E-07 && x < 1.19209290E-07) {\n      return 1.0;\n    }\n\n    var xpi = x * Math.PI;\n    return Math.sin(xpi) / xpi * Math.sin(xpi / 3.0) / (xpi / 3.0);\n  }\n}];\n\n},{}],8:[function(_dereq_,module,exports){\n'use strict';\n\nvar createFilters = _dereq_('./resize_filter_gen');\n\nfunction resetAlpha(dst, width, height) {\n  var ptr = 3,\n      len = width * height * 4 | 0;\n\n  while (ptr < len) {\n    dst[ptr] = 0xFF;\n    ptr = ptr + 4 | 0;\n  }\n}\n\nfunction asUint8Array(src) {\n  return new Uint8Array(src.buffer, 0, src.byteLength);\n}\n\nvar IS_LE = true; // should not crash everything on module load in old browsers\n\ntry {\n  IS_LE = new Uint32Array(new Uint8Array([1, 0, 0, 0]).buffer)[0] === 1;\n} catch (__) {}\n\nfunction copyInt16asLE(src, target, target_offset) {\n  if (IS_LE) {\n    target.set(asUint8Array(src), target_offset);\n    return;\n  }\n\n  for (var ptr = target_offset, i = 0; i < src.length; i++) {\n    var data = src[i];\n    target[ptr++] = data & 0xFF;\n    target[ptr++] = data >> 8 & 0xFF;\n  }\n}\n\nmodule.exports = function resize_wasm(options) {\n  var src = options.src;\n  var srcW = options.width;\n  var srcH = options.height;\n  var destW = options.toWidth;\n  var destH = options.toHeight;\n  var scaleX = options.scaleX || options.toWidth / options.width;\n  var scaleY = options.scaleY || options.toHeight / options.height;\n  var offsetX = options.offsetX || 0.0;\n  var offsetY = options.offsetY || 0.0;\n  var dest = options.dest || new Uint8Array(destW * destH * 4);\n  var quality = typeof options.quality === 'undefined' ? 3 : options.quality;\n  var alpha = options.alpha || false;\n  var filtersX = createFilters(quality, srcW, destW, scaleX, offsetX),\n      filtersY = createFilters(quality, srcH, destH, scaleY, offsetY); // destination is 0 too.\n\n  var src_offset = 0; // buffer between convolve passes\n\n  var tmp_offset = this.__align(src_offset + Math.max(src.byteLength, dest.byteLength));\n\n  var filtersX_offset = this.__align(tmp_offset + srcH * destW * 4);\n\n  var filtersY_offset = this.__align(filtersX_offset + filtersX.byteLength);\n\n  var alloc_bytes = filtersY_offset + filtersY.byteLength;\n\n  var instance = this.__instance('resize', alloc_bytes); //\n  // Fill memory block with data to process\n  //\n\n\n  var mem = new Uint8Array(this.__memory.buffer);\n  var mem32 = new Uint32Array(this.__memory.buffer); // 32-bit copy is much faster in chrome\n\n  var src32 = new Uint32Array(src.buffer);\n  mem32.set(src32); // We should guarantee LE bytes order. Filters are not big, so\n  // speed difference is not significant vs direct .set()\n\n  copyInt16asLE(filtersX, mem, filtersX_offset);\n  copyInt16asLE(filtersY, mem, filtersY_offset); //\n  // Now call webassembly method\n  // emsdk does method names with '_'\n\n  var fn = instance.exports.convolveHV || instance.exports._convolveHV;\n  fn(filtersX_offset, filtersY_offset, tmp_offset, srcW, srcH, destW, destH); //\n  // Copy data back to typed array\n  //\n  // 32-bit copy is much faster in chrome\n\n  var dest32 = new Uint32Array(dest.buffer);\n  dest32.set(new Uint32Array(this.__memory.buffer, 0, destH * destW)); // That's faster than doing checks in convolver.\n  // !!! Note, canvas data is not premultipled. We don't need other\n  // alpha corrections.\n\n  if (!alpha) resetAlpha(dest, destW, destH);\n  return dest;\n};\n\n},{\"./resize_filter_gen\":6}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar GC_INTERVAL = 100;\n\nfunction Pool(create, idle) {\n  this.create = create;\n  this.available = [];\n  this.acquired = {};\n  this.lastId = 1;\n  this.timeoutId = 0;\n  this.idle = idle || 2000;\n}\n\nPool.prototype.acquire = function () {\n  var _this = this;\n\n  var resource;\n\n  if (this.available.length !== 0) {\n    resource = this.available.pop();\n  } else {\n    resource = this.create();\n    resource.id = this.lastId++;\n\n    resource.release = function () {\n      return _this.release(resource);\n    };\n  }\n\n  this.acquired[resource.id] = resource;\n  return resource;\n};\n\nPool.prototype.release = function (resource) {\n  var _this2 = this;\n\n  delete this.acquired[resource.id];\n  resource.lastUsed = Date.now();\n  this.available.push(resource);\n\n  if (this.timeoutId === 0) {\n    this.timeoutId = setTimeout(function () {\n      return _this2.gc();\n    }, GC_INTERVAL);\n  }\n};\n\nPool.prototype.gc = function () {\n  var _this3 = this;\n\n  var now = Date.now();\n  this.available = this.available.filter(function (resource) {\n    if (now - resource.lastUsed > _this3.idle) {\n      resource.destroy();\n      return false;\n    }\n\n    return true;\n  });\n\n  if (this.available.length !== 0) {\n    this.timeoutId = setTimeout(function () {\n      return _this3.gc();\n    }, GC_INTERVAL);\n  } else {\n    this.timeoutId = 0;\n  }\n};\n\nmodule.exports = Pool;\n\n},{}],10:[function(_dereq_,module,exports){\n// Add intermediate resizing steps when scaling down by a very large factor.\n//\n// For example, when resizing 10000x10000 down to 10x10, it'll resize it to\n// 300x300 first.\n//\n// It's needed because tiler has issues when the entire tile is scaled down\n// to a few pixels (1024px source tile with border size 3 should result in\n// at least 3+3+2 = 8px target tile, so max scale factor is 128 here).\n//\n// Also, adding intermediate steps can speed up processing if we use lower\n// quality algorithms for first stages.\n//\n'use strict'; // min size = 0 results in infinite loop,\n// min size = 1 can consume large amount of memory\n\nvar MIN_INNER_TILE_SIZE = 2;\n\nmodule.exports = function createStages(fromWidth, fromHeight, toWidth, toHeight, srcTileSize, destTileBorder) {\n  var scaleX = toWidth / fromWidth;\n  var scaleY = toHeight / fromHeight; // derived from createRegions equation:\n  // innerTileWidth = pixelFloor(srcTileSize * scaleX) - 2 * destTileBorder;\n\n  var minScale = (2 * destTileBorder + MIN_INNER_TILE_SIZE + 1) / srcTileSize; // refuse to scale image multiple times by less than twice each time,\n  // it could only happen because of invalid options\n\n  if (minScale > 0.5) return [[toWidth, toHeight]];\n  var stageCount = Math.ceil(Math.log(Math.min(scaleX, scaleY)) / Math.log(minScale)); // no additional resizes are necessary,\n  // stageCount can be zero or be negative when enlarging the image\n\n  if (stageCount <= 1) return [[toWidth, toHeight]];\n  var result = [];\n\n  for (var i = 0; i < stageCount; i++) {\n    var width = Math.round(Math.pow(Math.pow(fromWidth, stageCount - i - 1) * Math.pow(toWidth, i + 1), 1 / stageCount));\n    var height = Math.round(Math.pow(Math.pow(fromHeight, stageCount - i - 1) * Math.pow(toHeight, i + 1), 1 / stageCount));\n    result.push([width, height]);\n  }\n\n  return result;\n};\n\n},{}],11:[function(_dereq_,module,exports){\n// Split original image into multiple 1024x1024 chunks to reduce memory usage\n// (images have to be unpacked into typed arrays for resizing) and allow\n// parallel processing of multiple tiles at a time.\n//\n'use strict';\n/*\n * pixelFloor and pixelCeil are modified versions of Math.floor and Math.ceil\n * functions which take into account floating point arithmetic errors.\n * Those errors can cause undesired increments/decrements of sizes and offsets:\n * Math.ceil(36 / (36 / 500)) = 501\n * pixelCeil(36 / (36 / 500)) = 500\n */\n\nvar PIXEL_EPSILON = 1e-5;\n\nfunction pixelFloor(x) {\n  var nearest = Math.round(x);\n\n  if (Math.abs(x - nearest) < PIXEL_EPSILON) {\n    return nearest;\n  }\n\n  return Math.floor(x);\n}\n\nfunction pixelCeil(x) {\n  var nearest = Math.round(x);\n\n  if (Math.abs(x - nearest) < PIXEL_EPSILON) {\n    return nearest;\n  }\n\n  return Math.ceil(x);\n}\n\nmodule.exports = function createRegions(options) {\n  var scaleX = options.toWidth / options.width;\n  var scaleY = options.toHeight / options.height;\n  var innerTileWidth = pixelFloor(options.srcTileSize * scaleX) - 2 * options.destTileBorder;\n  var innerTileHeight = pixelFloor(options.srcTileSize * scaleY) - 2 * options.destTileBorder; // prevent infinite loop, this should never happen\n\n  if (innerTileWidth < 1 || innerTileHeight < 1) {\n    throw new Error('Internal error in pica: target tile width/height is too small.');\n  }\n\n  var x, y;\n  var innerX, innerY, toTileWidth, toTileHeight;\n  var tiles = [];\n  var tile; // we go top-to-down instead of left-to-right to make image displayed from top to\n  // doesn in the browser\n\n  for (innerY = 0; innerY < options.toHeight; innerY += innerTileHeight) {\n    for (innerX = 0; innerX < options.toWidth; innerX += innerTileWidth) {\n      x = innerX - options.destTileBorder;\n\n      if (x < 0) {\n        x = 0;\n      }\n\n      toTileWidth = innerX + innerTileWidth + options.destTileBorder - x;\n\n      if (x + toTileWidth >= options.toWidth) {\n        toTileWidth = options.toWidth - x;\n      }\n\n      y = innerY - options.destTileBorder;\n\n      if (y < 0) {\n        y = 0;\n      }\n\n      toTileHeight = innerY + innerTileHeight + options.destTileBorder - y;\n\n      if (y + toTileHeight >= options.toHeight) {\n        toTileHeight = options.toHeight - y;\n      }\n\n      tile = {\n        toX: x,\n        toY: y,\n        toWidth: toTileWidth,\n        toHeight: toTileHeight,\n        toInnerX: innerX,\n        toInnerY: innerY,\n        toInnerWidth: innerTileWidth,\n        toInnerHeight: innerTileHeight,\n        offsetX: x / scaleX - pixelFloor(x / scaleX),\n        offsetY: y / scaleY - pixelFloor(y / scaleY),\n        scaleX: scaleX,\n        scaleY: scaleY,\n        x: pixelFloor(x / scaleX),\n        y: pixelFloor(y / scaleY),\n        width: pixelCeil(toTileWidth / scaleX),\n        height: pixelCeil(toTileHeight / scaleY)\n      };\n      tiles.push(tile);\n    }\n  }\n\n  return tiles;\n};\n\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\n\nfunction objClass(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nmodule.exports.isCanvas = function isCanvas(element) {\n  var cname = objClass(element);\n  return cname === '[object HTMLCanvasElement]'\n  /* browser */\n  || cname === '[object OffscreenCanvas]' || cname === '[object Canvas]'\n  /* node-canvas */\n  ;\n};\n\nmodule.exports.isImage = function isImage(element) {\n  return objClass(element) === '[object HTMLImageElement]';\n};\n\nmodule.exports.isImageBitmap = function isImageBitmap(element) {\n  return objClass(element) === '[object ImageBitmap]';\n};\n\nmodule.exports.limiter = function limiter(concurrency) {\n  var active = 0,\n      queue = [];\n\n  function roll() {\n    if (active < concurrency && queue.length) {\n      active++;\n      queue.shift()();\n    }\n  }\n\n  return function limit(fn) {\n    return new Promise(function (resolve, reject) {\n      queue.push(function () {\n        fn().then(function (result) {\n          resolve(result);\n          active--;\n          roll();\n        }, function (err) {\n          reject(err);\n          active--;\n          roll();\n        });\n      });\n      roll();\n    });\n  };\n};\n\nmodule.exports.cib_quality_name = function cib_quality_name(num) {\n  switch (num) {\n    case 0:\n      return 'pixelated';\n\n    case 1:\n      return 'low';\n\n    case 2:\n      return 'medium';\n  }\n\n  return 'high';\n};\n\nmodule.exports.cib_support = function cib_support(createCanvas) {\n  return Promise.resolve().then(function () {\n    if (typeof createImageBitmap === 'undefined') {\n      return false;\n    }\n\n    var c = createCanvas(100, 100);\n    return createImageBitmap(c, 0, 0, 100, 100, {\n      resizeWidth: 10,\n      resizeHeight: 10,\n      resizeQuality: 'high'\n    }).then(function (bitmap) {\n      var status = bitmap.width === 10; // Branch below is filtered on upper level. We do not call resize\n      // detection for basic ImageBitmap.\n      //\n      // https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap\n      // old Crome 51 has ImageBitmap without .close(). Then this code\n      // will throw and return 'false' as expected.\n      //\n\n      bitmap.close();\n      c = null;\n      return status;\n    });\n  })[\"catch\"](function () {\n    return false;\n  });\n};\n\n},{}],13:[function(_dereq_,module,exports){\n// Web Worker wrapper for image resize function\n'use strict';\n\nmodule.exports = function () {\n  var MathLib = _dereq_('./mathlib');\n\n  var mathLib;\n  /* eslint-disable no-undef */\n\n  onmessage = function onmessage(ev) {\n    var opts = ev.data.opts;\n    if (!mathLib) mathLib = new MathLib(ev.data.features); // Use multimath's sync auto-init. Avoid Promise use in old browsers,\n    // because polyfills are not propagated to webworker.\n\n    var result = mathLib.resizeAndUnsharp(opts);\n    postMessage({\n      result: result\n    }, [result.buffer]);\n  };\n};\n\n},{\"./mathlib\":1}],14:[function(_dereq_,module,exports){\n// Calculate Gaussian blur of an image using IIR filter\n// The method is taken from Intel's white paper and code example attached to it:\n// https://software.intel.com/en-us/articles/iir-gaussian-blur-filter\n// -implementation-using-intel-advanced-vector-extensions\n\nvar a0, a1, a2, a3, b1, b2, left_corner, right_corner;\n\nfunction gaussCoef(sigma) {\n  if (sigma < 0.5) {\n    sigma = 0.5;\n  }\n\n  var a = Math.exp(0.726 * 0.726) / sigma,\n      g1 = Math.exp(-a),\n      g2 = Math.exp(-2 * a),\n      k = (1 - g1) * (1 - g1) / (1 + 2 * a * g1 - g2);\n\n  a0 = k;\n  a1 = k * (a - 1) * g1;\n  a2 = k * (a + 1) * g1;\n  a3 = -k * g2;\n  b1 = 2 * g1;\n  b2 = -g2;\n  left_corner = (a0 + a1) / (1 - b1 - b2);\n  right_corner = (a2 + a3) / (1 - b1 - b2);\n\n  // Attempt to force type to FP32.\n  return new Float32Array([ a0, a1, a2, a3, b1, b2, left_corner, right_corner ]);\n}\n\nfunction convolveMono16(src, out, line, coeff, width, height) {\n  // takes src image and writes the blurred and transposed result into out\n\n  var prev_src, curr_src, curr_out, prev_out, prev_prev_out;\n  var src_index, out_index, line_index;\n  var i, j;\n  var coeff_a0, coeff_a1, coeff_b1, coeff_b2;\n\n  for (i = 0; i < height; i++) {\n    src_index = i * width;\n    out_index = i;\n    line_index = 0;\n\n    // left to right\n    prev_src = src[src_index];\n    prev_prev_out = prev_src * coeff[6];\n    prev_out = prev_prev_out;\n\n    coeff_a0 = coeff[0];\n    coeff_a1 = coeff[1];\n    coeff_b1 = coeff[4];\n    coeff_b2 = coeff[5];\n\n    for (j = 0; j < width; j++) {\n      curr_src = src[src_index];\n\n      curr_out = curr_src * coeff_a0 +\n                 prev_src * coeff_a1 +\n                 prev_out * coeff_b1 +\n                 prev_prev_out * coeff_b2;\n\n      prev_prev_out = prev_out;\n      prev_out = curr_out;\n      prev_src = curr_src;\n\n      line[line_index] = prev_out;\n      line_index++;\n      src_index++;\n    }\n\n    src_index--;\n    line_index--;\n    out_index += height * (width - 1);\n\n    // right to left\n    prev_src = src[src_index];\n    prev_prev_out = prev_src * coeff[7];\n    prev_out = prev_prev_out;\n    curr_src = prev_src;\n\n    coeff_a0 = coeff[2];\n    coeff_a1 = coeff[3];\n\n    for (j = width - 1; j >= 0; j--) {\n      curr_out = curr_src * coeff_a0 +\n                 prev_src * coeff_a1 +\n                 prev_out * coeff_b1 +\n                 prev_prev_out * coeff_b2;\n\n      prev_prev_out = prev_out;\n      prev_out = curr_out;\n\n      prev_src = curr_src;\n      curr_src = src[src_index];\n\n      out[out_index] = line[line_index] + prev_out;\n\n      src_index--;\n      line_index--;\n      out_index -= height;\n    }\n  }\n}\n\n\nfunction blurMono16(src, width, height, radius) {\n  // Quick exit on zero radius\n  if (!radius) { return; }\n\n  var out      = new Uint16Array(src.length),\n      tmp_line = new Float32Array(Math.max(width, height));\n\n  var coeff = gaussCoef(radius);\n\n  convolveMono16(src, out, tmp_line, coeff, width, height, radius);\n  convolveMono16(out, src, tmp_line, coeff, height, width, radius);\n}\n\nmodule.exports = blurMono16;\n\n},{}],15:[function(_dereq_,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n},{}],16:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar assign         = _dereq_('object-assign');\nvar base64decode   = _dereq_('./lib/base64decode');\nvar hasWebAssembly = _dereq_('./lib/wa_detect');\n\n\nvar DEFAULT_OPTIONS = {\n  js: true,\n  wasm: true\n};\n\n\nfunction MultiMath(options) {\n  if (!(this instanceof MultiMath)) return new MultiMath(options);\n\n  var opts = assign({}, DEFAULT_OPTIONS, options || {});\n\n  this.options         = opts;\n\n  this.__cache         = {};\n\n  this.__init_promise  = null;\n  this.__modules       = opts.modules || {};\n  this.__memory        = null;\n  this.__wasm          = {};\n\n  this.__isLE = ((new Uint32Array((new Uint8Array([ 1, 0, 0, 0 ])).buffer))[0] === 1);\n\n  if (!this.options.js && !this.options.wasm) {\n    throw new Error('mathlib: at least \"js\" or \"wasm\" should be enabled');\n  }\n}\n\n\nMultiMath.prototype.has_wasm = hasWebAssembly;\n\n\nMultiMath.prototype.use = function (module) {\n  this.__modules[module.name] = module;\n\n  // Pin the best possible implementation\n  if (this.options.wasm && this.has_wasm() && module.wasm_fn) {\n    this[module.name] = module.wasm_fn;\n  } else {\n    this[module.name] = module.fn;\n  }\n\n  return this;\n};\n\n\nMultiMath.prototype.init = function () {\n  if (this.__init_promise) return this.__init_promise;\n\n  if (!this.options.js && this.options.wasm && !this.has_wasm()) {\n    return Promise.reject(new Error('mathlib: only \"wasm\" was enabled, but it\\'s not supported'));\n  }\n\n  var self = this;\n\n  this.__init_promise = Promise.all(Object.keys(self.__modules).map(function (name) {\n    var module = self.__modules[name];\n\n    if (!self.options.wasm || !self.has_wasm() || !module.wasm_fn) return null;\n\n    // If already compiled - exit\n    if (self.__wasm[name]) return null;\n\n    // Compile wasm source\n    return WebAssembly.compile(self.__base64decode(module.wasm_src))\n      .then(function (m) { self.__wasm[name] = m; });\n  }))\n    .then(function () { return self; });\n\n  return this.__init_promise;\n};\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Methods below are for internal use from plugins\n\n\n// Simple decode base64 to typed array. Useful to load embedded webassembly\n// code. You probably don't need to call this method directly.\n//\nMultiMath.prototype.__base64decode = base64decode;\n\n\n// Increase current memory to include specified number of bytes. Do nothing if\n// size is already ok. You probably don't need to call this method directly,\n// because it will be invoked from `.__instance()`.\n//\nMultiMath.prototype.__reallocate = function mem_grow_to(bytes) {\n  if (!this.__memory) {\n    this.__memory = new WebAssembly.Memory({\n      initial: Math.ceil(bytes / (64 * 1024))\n    });\n    return this.__memory;\n  }\n\n  var mem_size = this.__memory.buffer.byteLength;\n\n  if (mem_size < bytes) {\n    this.__memory.grow(Math.ceil((bytes - mem_size) / (64 * 1024)));\n  }\n\n  return this.__memory;\n};\n\n\n// Returns instantinated webassembly item by name, with specified memory size\n// and environment.\n// - use cache if available\n// - do sync module init, if async init was not called earlier\n// - allocate memory if not enougth\n// - can export functions to webassembly via \"env_extra\",\n//   for example, { exp: Math.exp }\n//\nMultiMath.prototype.__instance = function instance(name, memsize, env_extra) {\n  if (memsize) this.__reallocate(memsize);\n\n  // If .init() was not called, do sync compile\n  if (!this.__wasm[name]) {\n    var module = this.__modules[name];\n    this.__wasm[name] = new WebAssembly.Module(this.__base64decode(module.wasm_src));\n  }\n\n  if (!this.__cache[name]) {\n    var env_base = {\n      memoryBase: 0,\n      memory: this.__memory,\n      tableBase: 0,\n      table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })\n    };\n\n    this.__cache[name] = new WebAssembly.Instance(this.__wasm[name], {\n      env: assign(env_base, env_extra || {})\n    });\n  }\n\n  return this.__cache[name];\n};\n\n\n// Helper to calculate memory aligh for pointers. Webassembly does not require\n// this, but you may wish to experiment. Default base = 8;\n//\nMultiMath.prototype.__align = function align(number, base) {\n  base = base || 8;\n  var reminder = number % base;\n  return number + (reminder ? base - reminder : 0);\n};\n\n\nmodule.exports = MultiMath;\n\n},{\"./lib/base64decode\":17,\"./lib/wa_detect\":23,\"object-assign\":24}],17:[function(_dereq_,module,exports){\n// base64 decode str -> Uint8Array, to load WA modules\n//\n'use strict';\n\n\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\nmodule.exports = function base64decode(str) {\n  var input = str.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max   = input.length;\n\n  var out = new Uint8Array((max * 3) >> 2);\n\n  // Collect by 6*4 bits (3 bytes)\n\n  var bits = 0;\n  var ptr  = 0;\n\n  for (var idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      out[ptr++] = (bits >> 16) & 0xFF;\n      out[ptr++] = (bits >> 8) & 0xFF;\n      out[ptr++] = bits & 0xFF;\n    }\n\n    bits = (bits << 6) | BASE64_MAP.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  var tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    out[ptr++] = (bits >> 16) & 0xFF;\n    out[ptr++] = (bits >> 8) & 0xFF;\n    out[ptr++] = bits & 0xFF;\n  } else if (tailbits === 18) {\n    out[ptr++] = (bits >> 10) & 0xFF;\n    out[ptr++] = (bits >> 2) & 0xFF;\n  } else if (tailbits === 12) {\n    out[ptr++] = (bits >> 4) & 0xFF;\n  }\n\n  return out;\n};\n\n},{}],18:[function(_dereq_,module,exports){\n// Calculates 16-bit precision HSL lightness from 8-bit rgba buffer\n//\n'use strict';\n\n\nmodule.exports = function hsl_l16_js(img, width, height) {\n  var size = width * height;\n  var out = new Uint16Array(size);\n  var r, g, b, min, max;\n  for (var i = 0; i < size; i++) {\n    r = img[4 * i];\n    g = img[4 * i + 1];\n    b = img[4 * i + 2];\n    max = (r >= g && r >= b) ? r : (g >= b && g >= r) ? g : b;\n    min = (r <= g && r <= b) ? r : (g <= b && g <= r) ? g : b;\n    out[i] = (max + min) * 257 >> 1;\n  }\n  return out;\n};\n\n},{}],19:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  name:     'unsharp_mask',\n  fn:       _dereq_('./unsharp_mask'),\n  wasm_fn:  _dereq_('./unsharp_mask_wasm'),\n  wasm_src: _dereq_('./unsharp_mask_wasm_base64')\n};\n\n},{\"./unsharp_mask\":20,\"./unsharp_mask_wasm\":21,\"./unsharp_mask_wasm_base64\":22}],20:[function(_dereq_,module,exports){\n// Unsharp mask filter\n//\n// http://stackoverflow.com/a/23322820/1031804\n// USM(O) = O + (2 * (Amount / 100) * (O - GB))\n// GB - gaussian blur.\n//\n// Image is converted from RGB to HSL, unsharp mask is applied to the\n// lightness channel and then image is converted back to RGB.\n//\n'use strict';\n\n\nvar glur_mono16 = _dereq_('glur/mono16');\nvar hsl_l16     = _dereq_('./hsl_l16');\n\n\nmodule.exports = function unsharp(img, width, height, amount, radius, threshold) {\n  var r, g, b;\n  var h, s, l;\n  var min, max;\n  var m1, m2, hShifted;\n  var diff, iTimes4;\n\n  if (amount === 0 || radius < 0.5) {\n    return;\n  }\n  if (radius > 2.0) {\n    radius = 2.0;\n  }\n\n  var lightness = hsl_l16(img, width, height);\n\n  var blured = new Uint16Array(lightness); // copy, because blur modify src\n\n  glur_mono16(blured, width, height, radius);\n\n  var amountFp = (amount / 100 * 0x1000 + 0.5)|0;\n  var thresholdFp = (threshold * 257)|0;\n\n  var size = width * height;\n\n  /* eslint-disable indent */\n  for (var i = 0; i < size; i++) {\n    diff = 2 * (lightness[i] - blured[i]);\n\n    if (Math.abs(diff) >= thresholdFp) {\n      iTimes4 = i * 4;\n      r = img[iTimes4];\n      g = img[iTimes4 + 1];\n      b = img[iTimes4 + 2];\n\n      // convert RGB to HSL\n      // take RGB, 8-bit unsigned integer per each channel\n      // save HSL, H and L are 16-bit unsigned integers, S is 12-bit unsigned integer\n      // math is taken from here: http://www.easyrgb.com/index.php?X=MATH&H=18\n      // and adopted to be integer (fixed point in fact) for sake of performance\n      max = (r >= g && r >= b) ? r : (g >= r && g >= b) ? g : b; // min and max are in [0..0xff]\n      min = (r <= g && r <= b) ? r : (g <= r && g <= b) ? g : b;\n      l = (max + min) * 257 >> 1; // l is in [0..0xffff] that is caused by multiplication by 257\n\n      if (min === max) {\n        h = s = 0;\n      } else {\n        s = (l <= 0x7fff) ?\n          (((max - min) * 0xfff) / (max + min))|0 :\n          (((max - min) * 0xfff) / (2 * 0xff - max - min))|0; // s is in [0..0xfff]\n        // h could be less 0, it will be fixed in backward conversion to RGB, |h| <= 0xffff / 6\n        h = (r === max) ? (((g - b) * 0xffff) / (6 * (max - min)))|0\n          : (g === max) ? 0x5555 + ((((b - r) * 0xffff) / (6 * (max - min)))|0) // 0x5555 == 0xffff / 3\n          : 0xaaaa + ((((r - g) * 0xffff) / (6 * (max - min)))|0); // 0xaaaa == 0xffff * 2 / 3\n      }\n\n      // add unsharp mask mask to the lightness channel\n      l += (amountFp * diff + 0x800) >> 12;\n      if (l > 0xffff) {\n        l = 0xffff;\n      } else if (l < 0) {\n        l = 0;\n      }\n\n      // convert HSL back to RGB\n      // for information about math look above\n      if (s === 0) {\n        r = g = b = l >> 8;\n      } else {\n        m2 = (l <= 0x7fff) ? (l * (0x1000 + s) + 0x800) >> 12 :\n          l  + (((0xffff - l) * s + 0x800) >>  12);\n        m1 = 2 * l - m2 >> 8;\n        m2 >>= 8;\n        // save result to RGB channels\n        // R channel\n        hShifted = (h + 0x5555) & 0xffff; // 0x5555 == 0xffff / 3\n        r = (hShifted >= 0xaaaa) ? m1 // 0xaaaa == 0xffff * 2 / 3\n          : (hShifted >= 0x7fff) ?  m1 + ((m2 - m1) * 6 * (0xaaaa - hShifted) + 0x8000 >> 16)\n          : (hShifted >= 0x2aaa) ? m2 // 0x2aaa == 0xffff / 6\n          : m1 + ((m2 - m1) * 6 * hShifted + 0x8000 >> 16);\n        // G channel\n        hShifted = h & 0xffff;\n        g = (hShifted >= 0xaaaa) ? m1 // 0xaaaa == 0xffff * 2 / 3\n          : (hShifted >= 0x7fff) ?  m1 + ((m2 - m1) * 6 * (0xaaaa - hShifted) + 0x8000 >> 16)\n          : (hShifted >= 0x2aaa) ? m2 // 0x2aaa == 0xffff / 6\n          : m1 + ((m2 - m1) * 6 * hShifted + 0x8000 >> 16);\n        // B channel\n        hShifted = (h - 0x5555) & 0xffff;\n        b = (hShifted >= 0xaaaa) ? m1 // 0xaaaa == 0xffff * 2 / 3\n          : (hShifted >= 0x7fff) ?  m1 + ((m2 - m1) * 6 * (0xaaaa - hShifted) + 0x8000 >> 16)\n          : (hShifted >= 0x2aaa) ? m2 // 0x2aaa == 0xffff / 6\n          : m1 + ((m2 - m1) * 6 * hShifted + 0x8000 >> 16);\n      }\n\n      img[iTimes4] = r;\n      img[iTimes4 + 1] = g;\n      img[iTimes4 + 2] = b;\n    }\n  }\n};\n\n},{\"./hsl_l16\":18,\"glur/mono16\":14}],21:[function(_dereq_,module,exports){\n'use strict';\n\n\nmodule.exports = function unsharp(img, width, height, amount, radius, threshold) {\n  if (amount === 0 || radius < 0.5) {\n    return;\n  }\n\n  if (radius > 2.0) {\n    radius = 2.0;\n  }\n\n  var pixels = width * height;\n\n  var img_bytes_cnt        = pixels * 4;\n  var hsl_bytes_cnt        = pixels * 2;\n  var blur_bytes_cnt       = pixels * 2;\n  var blur_line_byte_cnt   = Math.max(width, height) * 4; // float32 array\n  var blur_coeffs_byte_cnt = 8 * 4; // float32 array\n\n  var img_offset         = 0;\n  var hsl_offset         = img_bytes_cnt;\n  var blur_offset        = hsl_offset + hsl_bytes_cnt;\n  var blur_tmp_offset    = blur_offset + blur_bytes_cnt;\n  var blur_line_offset   = blur_tmp_offset + blur_bytes_cnt;\n  var blur_coeffs_offset = blur_line_offset + blur_line_byte_cnt;\n\n  var instance = this.__instance(\n    'unsharp_mask',\n    img_bytes_cnt + hsl_bytes_cnt + blur_bytes_cnt * 2 + blur_line_byte_cnt + blur_coeffs_byte_cnt,\n    { exp: Math.exp }\n  );\n\n  // 32-bit copy is much faster in chrome\n  var img32 = new Uint32Array(img.buffer);\n  var mem32 = new Uint32Array(this.__memory.buffer);\n  mem32.set(img32);\n\n  // HSL\n  var fn = instance.exports.hsl_l16 || instance.exports._hsl_l16;\n  fn(img_offset, hsl_offset, width, height);\n\n  // BLUR\n  fn = instance.exports.blurMono16 || instance.exports._blurMono16;\n  fn(hsl_offset, blur_offset, blur_tmp_offset,\n    blur_line_offset, blur_coeffs_offset, width, height, radius);\n\n  // UNSHARP\n  fn = instance.exports.unsharp || instance.exports._unsharp;\n  fn(img_offset, img_offset, hsl_offset,\n    blur_offset, width, height, amount, threshold);\n\n  // 32-bit copy is much faster in chrome\n  img32.set(new Uint32Array(this.__memory.buffer, 0, pixels));\n};\n\n},{}],22:[function(_dereq_,module,exports){\n// This is autogenerated file from math.wasm, don't edit.\n//\n'use strict';\n\n/* eslint-disable max-len */\nmodule.exports = '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';\n\n},{}],23:[function(_dereq_,module,exports){\n// Detect WebAssembly support.\n// - Check global WebAssembly object\n// - Try to load simple module (can be disabled via CSP)\n//\n'use strict';\n\n\nvar wa;\n\n\nmodule.exports = function hasWebAssembly() {\n  // use cache if called before;\n  if (typeof wa !== 'undefined') return wa;\n\n  wa = false;\n\n  if (typeof WebAssembly === 'undefined') return wa;\n\n  // If WebAssenbly is disabled, code can throw on compile\n  try {\n    // https://github.com/brion/min-wasm-fail/blob/master/min-wasm-fail.in.js\n    // Additional check that WA internals are correct\n\n    /* eslint-disable comma-spacing, max-len */\n    var bin      = new Uint8Array([ 0,97,115,109,1,0,0,0,1,6,1,96,1,127,1,127,3,2,1,0,5,3,1,0,1,7,8,1,4,116,101,115,116,0,0,10,16,1,14,0,32,0,65,1,54,2,0,32,0,40,2,0,11 ]);\n    var module   = new WebAssembly.Module(bin);\n    var instance = new WebAssembly.Instance(module, {});\n\n    // test storing to and loading from a non-zero location via a parameter.\n    // Safari on iOS 11.2.5 returns 0 unexpectedly at non-zero locations\n    if (instance.exports.test(4) !== 0) wa = true;\n\n    return wa;\n  } catch (__) {}\n\n  return wa;\n};\n\n},{}],24:[function(_dereq_,module,exports){\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],25:[function(_dereq_,module,exports){\nvar bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            'function(require,module,exports){' + fn + '(self); }',\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        'function(require,module,exports){' +\n            // try to call default if defined to also support babel esmodule exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);' +\n        '}',\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n\n},{}],\"/index.js\":[function(_dereq_,module,exports){\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar assign = _dereq_('object-assign');\n\nvar webworkify = _dereq_('webworkify');\n\nvar MathLib = _dereq_('./lib/mathlib');\n\nvar Pool = _dereq_('./lib/pool');\n\nvar utils = _dereq_('./lib/utils');\n\nvar worker = _dereq_('./lib/worker');\n\nvar createStages = _dereq_('./lib/stepper');\n\nvar createRegions = _dereq_('./lib/tiler'); // Deduplicate pools & limiters with the same configs\n// when user creates multiple pica instances.\n\n\nvar singletones = {};\nvar NEED_SAFARI_FIX = false;\n\ntry {\n  if (typeof navigator !== 'undefined' && navigator.userAgent) {\n    NEED_SAFARI_FIX = navigator.userAgent.indexOf('Safari') >= 0;\n  }\n} catch (e) {}\n\nvar concurrency = 1;\n\nif (typeof navigator !== 'undefined') {\n  concurrency = Math.min(navigator.hardwareConcurrency || 1, 4);\n}\n\nvar DEFAULT_PICA_OPTS = {\n  tile: 1024,\n  concurrency: concurrency,\n  features: ['js', 'wasm', 'ww'],\n  idle: 2000,\n  createCanvas: function createCanvas(width, height) {\n    var tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    return tmpCanvas;\n  }\n};\nvar DEFAULT_RESIZE_OPTS = {\n  quality: 3,\n  alpha: false,\n  unsharpAmount: 0,\n  unsharpRadius: 0.0,\n  unsharpThreshold: 0\n};\nvar CAN_NEW_IMAGE_DATA;\nvar CAN_CREATE_IMAGE_BITMAP;\n\nfunction workerFabric() {\n  return {\n    value: webworkify(worker),\n    destroy: function destroy() {\n      this.value.terminate();\n\n      if (typeof window !== 'undefined') {\n        var url = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n        if (url && url.revokeObjectURL && this.value.objectURL) {\n          url.revokeObjectURL(this.value.objectURL);\n        }\n      }\n    }\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n// API methods\n\n\nfunction Pica(options) {\n  if (!(this instanceof Pica)) return new Pica(options);\n  this.options = assign({}, DEFAULT_PICA_OPTS, options || {});\n  var limiter_key = \"lk_\".concat(this.options.concurrency); // Share limiters to avoid multiple parallel workers when user creates\n  // multiple pica instances.\n\n  this.__limit = singletones[limiter_key] || utils.limiter(this.options.concurrency);\n  if (!singletones[limiter_key]) singletones[limiter_key] = this.__limit; // List of supported features, according to options & browser/node.js\n\n  this.features = {\n    js: false,\n    // pure JS implementation, can be disabled for testing\n    wasm: false,\n    // webassembly implementation for heavy functions\n    cib: false,\n    // resize via createImageBitmap (only FF at this moment)\n    ww: false // webworkers\n\n  };\n  this.__workersPool = null; // Store requested features for webworkers\n\n  this.__requested_features = [];\n  this.__mathlib = null;\n}\n\nPica.prototype.init = function () {\n  var _this = this;\n\n  if (this.__initPromise) return this.__initPromise; // Test if we can create ImageData without canvas and memory copy\n\n  if (CAN_NEW_IMAGE_DATA !== false && CAN_NEW_IMAGE_DATA !== true) {\n    CAN_NEW_IMAGE_DATA = false;\n\n    if (typeof ImageData !== 'undefined' && typeof Uint8ClampedArray !== 'undefined') {\n      try {\n        /* eslint-disable no-new */\n        new ImageData(new Uint8ClampedArray(400), 10, 10);\n        CAN_NEW_IMAGE_DATA = true;\n      } catch (__) {}\n    }\n  } // ImageBitmap can be effective in 2 places:\n  //\n  // 1. Threaded jpeg unpack (basic)\n  // 2. Built-in resize (blocked due problem in chrome, see issue #89)\n  //\n  // For basic use we also need ImageBitmap wo support .close() method,\n  // see https://developer.mozilla.org/ru/docs/Web/API/ImageBitmap\n\n\n  if (CAN_CREATE_IMAGE_BITMAP !== false && CAN_CREATE_IMAGE_BITMAP !== true) {\n    CAN_CREATE_IMAGE_BITMAP = false;\n\n    if (typeof ImageBitmap !== 'undefined') {\n      if (ImageBitmap.prototype && ImageBitmap.prototype.close) {\n        CAN_CREATE_IMAGE_BITMAP = true;\n      } else {\n        this.debug('ImageBitmap does not support .close(), disabled');\n      }\n    }\n  }\n\n  var features = this.options.features.slice();\n\n  if (features.indexOf('all') >= 0) {\n    features = ['cib', 'wasm', 'js', 'ww'];\n  }\n\n  this.__requested_features = features;\n  this.__mathlib = new MathLib(features); // Check WebWorker support if requested\n\n  if (features.indexOf('ww') >= 0) {\n    if (typeof window !== 'undefined' && 'Worker' in window) {\n      // IE <= 11 don't allow to create webworkers from string. We should check it.\n      // https://connect.microsoft.com/IE/feedback/details/801810/web-workers-from-blob-urls-in-ie-10-and-11\n      try {\n        var wkr = _dereq_('webworkify')(function () {});\n\n        wkr.terminate();\n        this.features.ww = true; // pool uniqueness depends on pool config + webworker config\n\n        var wpool_key = \"wp_\".concat(JSON.stringify(this.options));\n\n        if (singletones[wpool_key]) {\n          this.__workersPool = singletones[wpool_key];\n        } else {\n          this.__workersPool = new Pool(workerFabric, this.options.idle);\n          singletones[wpool_key] = this.__workersPool;\n        }\n      } catch (__) {}\n    }\n  }\n\n  var initMath = this.__mathlib.init().then(function (mathlib) {\n    // Copy detected features\n    assign(_this.features, mathlib.features);\n  });\n\n  var checkCibResize;\n\n  if (!CAN_CREATE_IMAGE_BITMAP) {\n    checkCibResize = Promise.resolve(false);\n  } else {\n    checkCibResize = utils.cib_support(this.options.createCanvas).then(function (status) {\n      if (_this.features.cib && features.indexOf('cib') < 0) {\n        _this.debug('createImageBitmap() resize supported, but disabled by config');\n\n        return;\n      }\n\n      if (features.indexOf('cib') >= 0) _this.features.cib = status;\n    });\n  } // Init math lib. That's async because can load some\n\n\n  this.__initPromise = Promise.all([initMath, checkCibResize]).then(function () {\n    return _this;\n  });\n  return this.__initPromise;\n};\n\nPica.prototype.resize = function (from, to, options) {\n  var _this2 = this;\n\n  this.debug('Start resize...');\n  var opts = assign({}, DEFAULT_RESIZE_OPTS);\n\n  if (!isNaN(options)) {\n    opts = assign(opts, {\n      quality: options\n    });\n  } else if (options) {\n    opts = assign(opts, options);\n  }\n\n  opts.toWidth = to.width;\n  opts.toHeight = to.height;\n  opts.width = from.naturalWidth || from.width;\n  opts.height = from.naturalHeight || from.height; // Prevent stepper from infinite loop\n\n  if (to.width === 0 || to.height === 0) {\n    return Promise.reject(new Error(\"Invalid output size: \".concat(to.width, \"x\").concat(to.height)));\n  }\n\n  if (opts.unsharpRadius > 2) opts.unsharpRadius = 2;\n  var canceled = false;\n  var cancelToken = null;\n\n  if (opts.cancelToken) {\n    // Wrap cancelToken to avoid successive resolve & set flag\n    cancelToken = opts.cancelToken.then(function (data) {\n      canceled = true;\n      throw data;\n    }, function (err) {\n      canceled = true;\n      throw err;\n    });\n  }\n\n  var DEST_TILE_BORDER = 3; // Max possible filter window size\n\n  var destTileBorder = Math.ceil(Math.max(DEST_TILE_BORDER, 2.5 * opts.unsharpRadius | 0));\n  return this.init().then(function () {\n    if (canceled) return cancelToken; // if createImageBitmap supports resize, just do it and return\n\n    if (_this2.features.cib) {\n      var toCtx = to.getContext('2d', {\n        alpha: Boolean(opts.alpha)\n      });\n\n      _this2.debug('Resize via createImageBitmap()');\n\n      return createImageBitmap(from, {\n        resizeWidth: opts.toWidth,\n        resizeHeight: opts.toHeight,\n        resizeQuality: utils.cib_quality_name(opts.quality)\n      }).then(function (imageBitmap) {\n        if (canceled) return cancelToken; // if no unsharp - draw directly to output canvas\n\n        if (!opts.unsharpAmount) {\n          toCtx.drawImage(imageBitmap, 0, 0);\n          imageBitmap.close();\n          toCtx = null;\n\n          _this2.debug('Finished!');\n\n          return to;\n        }\n\n        _this2.debug('Unsharp result');\n\n        var tmpCanvas = _this2.options.createCanvas(opts.toWidth, opts.toHeight);\n\n        var tmpCtx = tmpCanvas.getContext('2d', {\n          alpha: Boolean(opts.alpha)\n        });\n        tmpCtx.drawImage(imageBitmap, 0, 0);\n        imageBitmap.close();\n        var iData = tmpCtx.getImageData(0, 0, opts.toWidth, opts.toHeight);\n\n        _this2.__mathlib.unsharp_mask(iData.data, opts.toWidth, opts.toHeight, opts.unsharpAmount, opts.unsharpRadius, opts.unsharpThreshold);\n\n        toCtx.putImageData(iData, 0, 0);\n        iData = tmpCtx = tmpCanvas = toCtx = null;\n\n        _this2.debug('Finished!');\n\n        return to;\n      });\n    } //\n    // No easy way, let's resize manually via arrays\n    //\n    // Share cache between calls:\n    //\n    // - wasm instance\n    // - wasm memory object\n    //\n\n\n    var cache = {}; // Call resizer in webworker or locally, depending on config\n\n    var invokeResize = function invokeResize(opts) {\n      return Promise.resolve().then(function () {\n        if (!_this2.features.ww) return _this2.__mathlib.resizeAndUnsharp(opts, cache);\n        return new Promise(function (resolve, reject) {\n          var w = _this2.__workersPool.acquire();\n\n          if (cancelToken) cancelToken[\"catch\"](function (err) {\n            return reject(err);\n          });\n\n          w.value.onmessage = function (ev) {\n            w.release();\n            if (ev.data.err) reject(ev.data.err);else resolve(ev.data.result);\n          };\n\n          w.value.postMessage({\n            opts: opts,\n            features: _this2.__requested_features,\n            preload: {\n              wasm_nodule: _this2.__mathlib.__\n            }\n          }, [opts.src.buffer]);\n        });\n      });\n    };\n\n    var tileAndResize = function tileAndResize(from, to, opts) {\n      var srcCtx;\n      var srcImageBitmap;\n      var isImageBitmapReused = false;\n      var toCtx;\n\n      var processTile = function processTile(tile) {\n        return _this2.__limit(function () {\n          if (canceled) return cancelToken;\n          var srcImageData; // Extract tile RGBA buffer, depending on input type\n\n          if (utils.isCanvas(from)) {\n            _this2.debug('Get tile pixel data'); // If input is Canvas - extract region data directly\n\n\n            srcImageData = srcCtx.getImageData(tile.x, tile.y, tile.width, tile.height);\n          } else {\n            // If input is Image or decoded to ImageBitmap,\n            // draw region to temporary canvas and extract data from it\n            //\n            // Note! Attempt to reuse this canvas causes significant slowdown in chrome\n            //\n            _this2.debug('Draw tile imageBitmap/image to temporary canvas');\n\n            var tmpCanvas = _this2.options.createCanvas(tile.width, tile.height);\n\n            var tmpCtx = tmpCanvas.getContext('2d', {\n              alpha: Boolean(opts.alpha)\n            });\n            tmpCtx.globalCompositeOperation = 'copy';\n            tmpCtx.drawImage(srcImageBitmap || from, tile.x, tile.y, tile.width, tile.height, 0, 0, tile.width, tile.height);\n\n            _this2.debug('Get tile pixel data');\n\n            srcImageData = tmpCtx.getImageData(0, 0, tile.width, tile.height);\n            tmpCtx = tmpCanvas = null;\n          }\n\n          var o = {\n            src: srcImageData.data,\n            width: tile.width,\n            height: tile.height,\n            toWidth: tile.toWidth,\n            toHeight: tile.toHeight,\n            scaleX: tile.scaleX,\n            scaleY: tile.scaleY,\n            offsetX: tile.offsetX,\n            offsetY: tile.offsetY,\n            quality: opts.quality,\n            alpha: opts.alpha,\n            unsharpAmount: opts.unsharpAmount,\n            unsharpRadius: opts.unsharpRadius,\n            unsharpThreshold: opts.unsharpThreshold\n          };\n\n          _this2.debug('Invoke resize math');\n\n          return Promise.resolve().then(function () {\n            return invokeResize(o);\n          }).then(function (result) {\n            if (canceled) return cancelToken;\n            srcImageData = null;\n            var toImageData;\n\n            _this2.debug('Convert raw rgba tile result to ImageData');\n\n            if (CAN_NEW_IMAGE_DATA) {\n              // this branch is for modern browsers\n              // If `new ImageData()` & Uint8ClampedArray suported\n              toImageData = new ImageData(new Uint8ClampedArray(result), tile.toWidth, tile.toHeight);\n            } else {\n              // fallback for `node-canvas` and old browsers\n              // (IE11 has ImageData but does not support `new ImageData()`)\n              toImageData = toCtx.createImageData(tile.toWidth, tile.toHeight);\n\n              if (toImageData.data.set) {\n                toImageData.data.set(result);\n              } else {\n                // IE9 don't have `.set()`\n                for (var i = toImageData.data.length - 1; i >= 0; i--) {\n                  toImageData.data[i] = result[i];\n                }\n              }\n            }\n\n            _this2.debug('Draw tile');\n\n            if (NEED_SAFARI_FIX) {\n              // Safari draws thin white stripes between tiles without this fix\n              toCtx.putImageData(toImageData, tile.toX, tile.toY, tile.toInnerX - tile.toX, tile.toInnerY - tile.toY, tile.toInnerWidth + 1e-5, tile.toInnerHeight + 1e-5);\n            } else {\n              toCtx.putImageData(toImageData, tile.toX, tile.toY, tile.toInnerX - tile.toX, tile.toInnerY - tile.toY, tile.toInnerWidth, tile.toInnerHeight);\n            }\n\n            return null;\n          });\n        });\n      }; // Need to normalize data source first. It can be canvas or image.\n      // If image - try to decode in background if possible\n\n\n      return Promise.resolve().then(function () {\n        toCtx = to.getContext('2d', {\n          alpha: Boolean(opts.alpha)\n        });\n\n        if (utils.isCanvas(from)) {\n          srcCtx = from.getContext('2d', {\n            alpha: Boolean(opts.alpha)\n          });\n          return null;\n        }\n\n        if (utils.isImageBitmap(from)) {\n          srcImageBitmap = from;\n          isImageBitmapReused = true;\n          return null;\n        }\n\n        if (utils.isImage(from)) {\n          // try do decode image in background for faster next operations\n          if (!CAN_CREATE_IMAGE_BITMAP) return null;\n\n          _this2.debug('Decode image via createImageBitmap');\n\n          return createImageBitmap(from).then(function (imageBitmap) {\n            srcImageBitmap = imageBitmap;\n          }) // Suppress error to use fallback, if method fails\n          // https://github.com/nodeca/pica/issues/190\n\n          /* eslint-disable no-unused-vars */\n          [\"catch\"](function (e) {\n            return null;\n          });\n        }\n\n        throw new Error('Pica: \".from\" should be Image, Canvas or ImageBitmap');\n      }).then(function () {\n        if (canceled) return cancelToken;\n\n        _this2.debug('Calculate tiles'); //\n        // Here we are with \"normalized\" source,\n        // follow to tiling\n        //\n\n\n        var regions = createRegions({\n          width: opts.width,\n          height: opts.height,\n          srcTileSize: _this2.options.tile,\n          toWidth: opts.toWidth,\n          toHeight: opts.toHeight,\n          destTileBorder: destTileBorder\n        });\n        var jobs = regions.map(function (tile) {\n          return processTile(tile);\n        });\n\n        function cleanup() {\n          if (srcImageBitmap) {\n            if (!isImageBitmapReused) srcImageBitmap.close();\n            srcImageBitmap = null;\n          }\n        }\n\n        _this2.debug('Process tiles');\n\n        return Promise.all(jobs).then(function () {\n          _this2.debug('Finished!');\n\n          cleanup();\n          return to;\n        }, function (err) {\n          cleanup();\n          throw err;\n        });\n      });\n    };\n\n    var processStages = function processStages(stages, from, to, opts) {\n      if (canceled) return cancelToken;\n\n      var _stages$shift = stages.shift(),\n          _stages$shift2 = _slicedToArray(_stages$shift, 2),\n          toWidth = _stages$shift2[0],\n          toHeight = _stages$shift2[1];\n\n      var isLastStage = stages.length === 0;\n      opts = assign({}, opts, {\n        toWidth: toWidth,\n        toHeight: toHeight,\n        // only use user-defined quality for the last stage,\n        // use simpler (Hamming) filter for the first stages where\n        // scale factor is large enough (more than 2-3)\n        quality: isLastStage ? opts.quality : Math.min(1, opts.quality)\n      });\n      var tmpCanvas;\n\n      if (!isLastStage) {\n        // create temporary canvas\n        tmpCanvas = _this2.options.createCanvas(toWidth, toHeight);\n      }\n\n      return tileAndResize(from, isLastStage ? to : tmpCanvas, opts).then(function () {\n        if (isLastStage) return to;\n        opts.width = toWidth;\n        opts.height = toHeight;\n        return processStages(stages, tmpCanvas, to, opts);\n      });\n    };\n\n    var stages = createStages(opts.width, opts.height, opts.toWidth, opts.toHeight, _this2.options.tile, destTileBorder);\n    return processStages(stages, from, to, opts);\n  });\n}; // RGBA buffer resize\n//\n\n\nPica.prototype.resizeBuffer = function (options) {\n  var _this3 = this;\n\n  var opts = assign({}, DEFAULT_RESIZE_OPTS, options);\n  return this.init().then(function () {\n    return _this3.__mathlib.resizeAndUnsharp(opts);\n  });\n};\n\nPica.prototype.toBlob = function (canvas, mimeType, quality) {\n  mimeType = mimeType || 'image/png';\n  return new Promise(function (resolve) {\n    if (canvas.toBlob) {\n      canvas.toBlob(function (blob) {\n        return resolve(blob);\n      }, mimeType, quality);\n      return;\n    }\n\n    if (canvas.convertToBlob) {\n      resolve(canvas.convertToBlob({\n        type: mimeType,\n        quality: quality\n      }));\n      return;\n    } // Fallback for old browsers\n\n\n    var asString = atob(canvas.toDataURL(mimeType, quality).split(',')[1]);\n    var len = asString.length;\n    var asBuffer = new Uint8Array(len);\n\n    for (var i = 0; i < len; i++) {\n      asBuffer[i] = asString.charCodeAt(i);\n    }\n\n    resolve(new Blob([asBuffer], {\n      type: mimeType\n    }));\n  });\n};\n\nPica.prototype.debug = function () {};\n\nmodule.exports = Pica;\n\n},{\"./lib/mathlib\":1,\"./lib/pool\":9,\"./lib/stepper\":10,\"./lib/tiler\":11,\"./lib/utils\":12,\"./lib/worker\":13,\"object-assign\":24,\"webworkify\":25}]},{},[])(\"/index.js\")\n});\n","\n'use strict';\n\n//////////////////////////////////////////////////////////////////////////\n// Helpers\n//\nfunction error(message, code) {\n  var err = new Error(message);\n  err.code = code;\n  return err;\n}\n\n\n// Convert number to 0xHH string\n//\nfunction to_hex(number) {\n  var n = number.toString(16).toUpperCase();\n  for (var i = 2 - n.length; i > 0; i--) n = '0' + n;\n  return '0x' + n;\n}\n\n\nfunction utf8_encode(str) {\n  try {\n    return unescape(encodeURIComponent(str));\n  } catch (_) {\n    return str;\n  }\n}\n\n\nfunction utf8_decode(str) {\n  try {\n    return decodeURIComponent(escape(str));\n  } catch (_) {\n    return str;\n  }\n}\n\n\n// Check if input is a Uint8Array\n//\nfunction is_uint8array(bin) {\n  return Object.prototype.toString.call(bin) === '[object Uint8Array]';\n}\n\n\n//////////////////////////////////////////////////////////////////////////\n// Exif parser\n//\n// Input:\n//  - jpeg_bin:   Uint8Array - jpeg file\n//  - exif_start: Number     - start of TIFF header (after Exif\\0\\0)\n//  - exif_end:   Number     - end of Exif segment\n//  - on_entry:   Number     - callback\n//\nfunction ExifParser(jpeg_bin, exif_start, exif_end) {\n  // Uint8Array, exif without signature (which isn't included in offsets)\n  this.input      = jpeg_bin.subarray(exif_start, exif_end);\n\n  // offset correction for `on_entry` callback\n  this.start      = exif_start;\n\n  // Check TIFF header (includes byte alignment and first IFD offset)\n  var sig = String.fromCharCode.apply(null, this.input.subarray(0, 4));\n\n  if (sig !== 'II\\x2A\\0' && sig !== 'MM\\0\\x2A') {\n    throw error('invalid TIFF signature', 'EBADDATA');\n  }\n\n  // true if motorola (big endian) byte alignment, false if intel\n  this.big_endian = sig[0] === 'M';\n}\n\n\nExifParser.prototype.each = function (on_entry) {\n  // allow premature exit\n  this.aborted = false;\n\n  var offset = this.read_uint32(4);\n\n  this.ifds_to_read = [ {\n    id:     0,\n    offset: offset\n  } ];\n\n  while (this.ifds_to_read.length > 0 && !this.aborted) {\n    var i = this.ifds_to_read.shift();\n    if (!i.offset) continue;\n    this.scan_ifd(i.id, i.offset, on_entry);\n  }\n};\n\n\nExifParser.prototype.filter = function (on_entry) {\n  var ifds = {};\n\n  // make sure IFD0 always exists\n  ifds.ifd0 = { id: 0, entries: [] };\n\n  this.each(function (entry) {\n    if (on_entry(entry) === false && !entry.is_subifd_link) return;\n    if (entry.is_subifd_link && entry.count !== 1 && entry.format !== 4) return; // filter out bogus links\n\n    if (!ifds['ifd' + entry.ifd]) {\n      ifds['ifd' + entry.ifd] = { id: entry.ifd, entries: [] };\n    }\n\n    ifds['ifd' + entry.ifd].entries.push(entry);\n  });\n\n  // thumbnails are not supported just yet, so delete all information related to it\n  delete ifds.ifd1;\n\n  // Calculate output size\n  var length = 8;\n  Object.keys(ifds).forEach(function (ifd_no) {\n    length += 2;\n\n    ifds[ifd_no].entries.forEach(function (entry) {\n      length += 12 + (entry.data_length > 4 ? Math.ceil(entry.data_length / 2) * 2 : 0);\n    });\n\n    length += 4;\n  });\n\n  this.output = new Uint8Array(length);\n  this.output[0] = this.output[1] = (this.big_endian ? 'M' : 'I').charCodeAt(0);\n  this.write_uint16(2, 0x2A);\n\n  var offset = 8;\n  var self = this;\n  this.write_uint32(4, offset);\n\n  Object.keys(ifds).forEach(function (ifd_no) {\n    ifds[ifd_no].written_offset = offset;\n\n    var ifd_start = offset;\n    var ifd_end   = ifd_start + 2 + ifds[ifd_no].entries.length * 12 + 4;\n    offset = ifd_end;\n\n    self.write_uint16(ifd_start, ifds[ifd_no].entries.length);\n\n    ifds[ifd_no].entries.sort(function (a, b) {\n      // IFD entries must be in order of increasing tag IDs\n      return a.tag - b.tag;\n    }).forEach(function (entry, idx) {\n      var entry_offset = ifd_start + 2 + idx * 12;\n\n      self.write_uint16(entry_offset, entry.tag);\n      self.write_uint16(entry_offset + 2, entry.format);\n      self.write_uint32(entry_offset + 4, entry.count);\n\n      if (entry.is_subifd_link) {\n        // filled in later\n        if (ifds['ifd' + entry.tag]) ifds['ifd' + entry.tag].link_offset = entry_offset + 8;\n      } else if (entry.data_length <= 4) {\n        self.output.set(\n          self.input.subarray(entry.data_offset - self.start, entry.data_offset - self.start + 4),\n          entry_offset + 8\n        );\n      } else {\n        self.write_uint32(entry_offset + 8, offset);\n        self.output.set(\n          self.input.subarray(entry.data_offset - self.start, entry.data_offset - self.start + entry.data_length),\n          offset\n        );\n        offset += Math.ceil(entry.data_length / 2) * 2;\n      }\n    });\n\n    var next_ifd = ifds['ifd' + (ifds[ifd_no].id + 1)];\n    if (next_ifd) next_ifd.link_offset = ifd_end - 4;\n  });\n\n  Object.keys(ifds).forEach(function (ifd_no) {\n    if (ifds[ifd_no].written_offset && ifds[ifd_no].link_offset) {\n      self.write_uint32(ifds[ifd_no].link_offset, ifds[ifd_no].written_offset);\n    }\n  });\n\n  if (this.output.length !== offset) throw error('internal error: incorrect buffer size allocated');\n\n  return this.output;\n};\n\n\nExifParser.prototype.read_uint16 = function (offset) {\n  var d = this.input;\n  if (offset + 2 > d.length) throw error('unexpected EOF', 'EBADDATA');\n\n  return this.big_endian ?\n    d[offset] * 0x100 + d[offset + 1] :\n    d[offset] + d[offset + 1] * 0x100;\n};\n\n\nExifParser.prototype.read_uint32 = function (offset) {\n  var d = this.input;\n  if (offset + 4 > d.length) throw error('unexpected EOF', 'EBADDATA');\n\n  return this.big_endian ?\n    d[offset] * 0x1000000 + d[offset + 1] * 0x10000 + d[offset + 2] * 0x100 + d[offset + 3] :\n    d[offset] + d[offset + 1] * 0x100 + d[offset + 2] * 0x10000 + d[offset + 3] * 0x1000000;\n};\n\n\nExifParser.prototype.write_uint16 = function (offset, value) {\n  var d = this.output;\n\n  if (this.big_endian) {\n    d[offset]     = (value >>> 8) & 0xFF;\n    d[offset + 1] = value & 0xFF;\n  } else {\n    d[offset]     = value & 0xFF;\n    d[offset + 1] = (value >>> 8) & 0xFF;\n  }\n};\n\n\nExifParser.prototype.write_uint32 = function (offset, value) {\n  var d = this.output;\n\n  if (this.big_endian) {\n    d[offset]     = (value >>> 24) & 0xFF;\n    d[offset + 1] = (value >>> 16) & 0xFF;\n    d[offset + 2] = (value >>> 8) & 0xFF;\n    d[offset + 3] = value & 0xFF;\n  } else {\n    d[offset]     = value & 0xFF;\n    d[offset + 1] = (value >>> 8) & 0xFF;\n    d[offset + 2] = (value >>> 16) & 0xFF;\n    d[offset + 3] = (value >>> 24) & 0xFF;\n  }\n};\n\n\nExifParser.prototype.is_subifd_link = function (ifd, tag) {\n  return (ifd === 0 && tag === 0x8769) || // SubIFD\n         (ifd === 0 && tag === 0x8825) || // GPS Info\n         (ifd === 0x8769 && tag === 0xA005); // Interop IFD\n};\n\n\n// Returns byte length of a single component of a given format\n//\nExifParser.prototype.exif_format_length = function (format) {\n  switch (format) {\n    case 1: // byte\n    case 2: // ascii\n    case 6: // sbyte\n    case 7: // undefined\n      return 1;\n\n    case 3: // short\n    case 8: // sshort\n      return 2;\n\n    case 4:  // long\n    case 9:  // slong\n    case 11: // float\n      return 4;\n\n    case 5:  // rational\n    case 10: // srational\n    case 12: // double\n      return 8;\n\n    default:\n      // unknown type\n      return 0;\n  }\n};\n\n\n// Reads Exif data\n//\nExifParser.prototype.exif_format_read = function (format, offset) {\n  var v;\n\n  switch (format) {\n    case 1: // byte\n    case 2: // ascii\n      v = this.input[offset];\n      return v;\n\n    case 6: // sbyte\n      v = this.input[offset];\n      return v | (v & 0x80) * 0x1fffffe;\n\n    case 3: // short\n      v = this.read_uint16(offset);\n      return v;\n\n    case 8: // sshort\n      v = this.read_uint16(offset);\n      return v | (v & 0x8000) * 0x1fffe;\n\n    case 4: // long\n      v = this.read_uint32(offset);\n      return v;\n\n    case 9: // slong\n      v = this.read_uint32(offset);\n      return v | 0;\n\n    case 5:  // rational\n    case 10: // srational\n    case 11: // float\n    case 12: // double\n      return null; // not implemented\n\n    case 7: // undefined\n      return null; // blob\n\n    default:\n      // unknown type\n      return null;\n  }\n};\n\n\nExifParser.prototype.scan_ifd = function (ifd_no, offset, on_entry) {\n  var entry_count = this.read_uint16(offset);\n\n  offset += 2;\n\n  for (var i = 0; i < entry_count; i++) {\n    var tag    = this.read_uint16(offset);\n    var format = this.read_uint16(offset + 2);\n    var count  = this.read_uint32(offset + 4);\n\n    var comp_length    = this.exif_format_length(format);\n    var data_length    = count * comp_length;\n    var data_offset    = data_length <= 4 ? offset + 8 : this.read_uint32(offset + 8);\n    var is_subifd_link = false;\n\n    if (data_offset + data_length > this.input.length) {\n      throw error('unexpected EOF', 'EBADDATA');\n    }\n\n    var value = [];\n    var comp_offset = data_offset;\n\n    for (var j = 0; j < count; j++, comp_offset += comp_length) {\n      var item = this.exif_format_read(format, comp_offset);\n      if (item === null) {\n        value = null;\n        break;\n      }\n      value.push(item);\n    }\n\n    if (Array.isArray(value) && format === 2) {\n      try {\n        value = utf8_decode(String.fromCharCode.apply(null, value));\n      } catch (_) {\n        value = null;\n      }\n\n      if (value && value[value.length - 1] === '\\0') value = value.slice(0, -1);\n    }\n\n    if (this.is_subifd_link(ifd_no, tag)) {\n      if (Array.isArray(value) && Number.isInteger(value[0]) && value[0] > 0) {\n        this.ifds_to_read.push({\n          id:     tag,\n          offset: value[0]\n        });\n        is_subifd_link = true;\n      }\n    }\n\n    var entry = {\n      is_big_endian:  this.big_endian,\n      ifd:            ifd_no,\n      tag:            tag,\n      format:         format,\n      count:          count,\n      entry_offset:   offset + this.start,\n      data_length:    data_length,\n      data_offset:    data_offset + this.start,\n      value:          value,\n      is_subifd_link: is_subifd_link\n    };\n\n    if (on_entry(entry) === false) {\n      this.aborted = true;\n      return;\n    }\n\n    offset += 12;\n  }\n\n  if (ifd_no === 0) {\n    this.ifds_to_read.push({\n      id:     1,\n      offset: this.read_uint32(offset)\n    });\n  }\n};\n\n\n// Check whether input is a JPEG image\n//\n// Input:\n//  - jpeg_bin: Uint8Array - jpeg file\n//\n// Returns true if it is and false otherwise\n//\nmodule.exports.is_jpeg = function (jpeg_bin) {\n  return jpeg_bin.length >= 4 && jpeg_bin[0] === 0xFF && jpeg_bin[1] === 0xD8 && jpeg_bin[2] === 0xFF;\n};\n\n\n// Call an iterator on each segment in the given JPEG image\n//\n// Input:\n//  - jpeg_bin:   Uint8Array - jpeg file\n//  - on_segment: Function - callback executed on each JPEG marker segment\n//    - segment:  Object\n//      - code:   Number - marker type (2nd byte, e.g. 0xE0 for APP0)\n//      - offset: Number - offset of the first byte (0xFF) relative to `jpeg_bin` start\n//      - length: Number - length of the entire marker segment including first two bytes and length\n//        - 2 for standalone markers\n//        - 4+length for markers with data\n//\n// Iteration stops when `EOI` (0xFFD9) marker is reached or if `on_segment`\n// function returns `false`.\n//\nmodule.exports.jpeg_segments_each = function (jpeg_bin, on_segment) {\n  if (!is_uint8array(jpeg_bin)) {\n    throw error('Invalid argument (jpeg_bin), Uint8Array expected', 'EINVAL');\n  }\n\n  if (typeof on_segment !== 'function') {\n    throw error('Invalid argument (on_segment), Function expected', 'EINVAL');\n  }\n\n  if (!module.exports.is_jpeg(jpeg_bin)) {\n    throw error('Unknown file format', 'ENOTJPEG');\n  }\n\n  var offset = 0, length = jpeg_bin.length, inside_scan = false;\n\n  for (;;) {\n    var segment_code, segment_length;\n\n    if (offset + 1 >= length) throw error('Unexpected EOF', 'EBADDATA');\n    var byte1 = jpeg_bin[offset];\n    var byte2 = jpeg_bin[offset + 1];\n\n    if (byte1 === 0xFF && byte2 === 0xFF) {\n      // padding\n      segment_code = 0xFF;\n      segment_length = 1;\n\n    } else if (byte1 === 0xFF && byte2 !== 0) {\n      // marker\n      segment_code = byte2;\n      segment_length = 2;\n\n      if ((0xD0 <= segment_code && segment_code <= 0xD9) || segment_code === 0x01) {\n        // standalone markers, according to JPEG 1992,\n        // http://www.w3.org/Graphics/JPEG/itu-t81.pdf, see Table B.1\n      } else {\n        if (offset + 3 >= length) throw error('Unexpected EOF', 'EBADDATA');\n        segment_length += jpeg_bin[offset + 2] * 0x100 + jpeg_bin[offset + 3];\n        if (segment_length < 2) throw error('Invalid segment length', 'EBADDATA');\n        if (offset + segment_length - 1 >= length) throw error('Unexpected EOF', 'EBADDATA');\n      }\n\n      if (inside_scan) {\n        if (segment_code >= 0xD0 && segment_code <= 0xD7) {\n          // reset markers\n        } else {\n          inside_scan = false;\n        }\n      }\n\n      if (segment_code === 0xDA /* SOS */) inside_scan = true;\n    } else if (inside_scan) {\n      // entropy-encoded segment\n      for (var pos = offset + 1; ; pos++) {\n        // scan until we find FF\n        if (pos >= length) throw error('Unexpected EOF', 'EBADDATA');\n        if (jpeg_bin[pos] === 0xFF) {\n          if (pos + 1 >= length) throw error('Unexpected EOF', 'EBADDATA');\n          if (jpeg_bin[pos + 1] !== 0) {\n            segment_code = 0;\n            segment_length = pos - offset;\n            break;\n          }\n        }\n      }\n    } else {\n      throw error('Unexpected byte at segment start: ' + to_hex(byte1) +\n        ' (offset ' + to_hex(offset) + ')', 'EBADDATA');\n    }\n\n    if (on_segment({ code: segment_code, offset: offset, length: segment_length }) === false) break;\n    if (segment_code === 0xD9 /* EOI */) break;\n    offset += segment_length;\n  }\n};\n\n\n// Replace or remove segments in the given JPEG image\n//\n// Input:\n//  - jpeg_bin:   Uint8Array - jpeg file\n//  - on_segment: Function - callback executed on each JPEG marker segment\n//    - segment:  Object\n//      - code:   Number - marker type (2nd byte, e.g. 0xE0 for APP0)\n//      - offset: Number - offset of the first byte (0xFF) relative to `jpeg_bin` start\n//      - length: Number - length of the entire marker segment including first two bytes and length\n//        - 2 for standalone markers\n//        - 4+length for markers with data\n//\n// `on_segment` function should return one of the following:\n//  - `false`        - segment is removed from the output\n//  - Uint8Array     - segment is replaced with the new data\n//  - [ Uint8Array ] - segment is replaced with the new data\n//  - anything else  - segment is copied to the output as is\n//\n// Any data after `EOI` (0xFFD9) marker is removed.\n//\nmodule.exports.jpeg_segments_filter = function (jpeg_bin, on_segment) {\n  if (!is_uint8array(jpeg_bin)) {\n    throw error('Invalid argument (jpeg_bin), Uint8Array expected', 'EINVAL');\n  }\n\n  if (typeof on_segment !== 'function') {\n    throw error('Invalid argument (on_segment), Function expected', 'EINVAL');\n  }\n\n  var ranges = [];\n  var out_length = 0;\n\n  module.exports.jpeg_segments_each(jpeg_bin, function (segment) {\n    var new_segment = on_segment(segment);\n\n    if (is_uint8array(new_segment)) {\n      ranges.push({ data: new_segment });\n      out_length += new_segment.length;\n    } else if (Array.isArray(new_segment)) {\n      new_segment.filter(is_uint8array).forEach(function (s) {\n        ranges.push({ data: s });\n        out_length += s.length;\n      });\n    } else if (new_segment !== false) {\n      var new_range = { start: segment.offset, end: segment.offset + segment.length };\n\n      if (ranges.length > 0 && ranges[ranges.length - 1].end === new_range.start) {\n        ranges[ranges.length - 1].end = new_range.end;\n      } else {\n        ranges.push(new_range);\n      }\n\n      out_length += segment.length;\n    }\n  });\n\n  var result = new Uint8Array(out_length);\n  var offset = 0;\n\n  ranges.forEach(function (range) {\n    var data = range.data || jpeg_bin.subarray(range.start, range.end);\n    result.set(data, offset);\n    offset += data.length;\n  });\n\n  return result;\n};\n\n\n// Call an iterator on each Exif entry in the given JPEG image\n//\n// Input:\n//  - jpeg_bin: Uint8Array - jpeg file\n//  - on_entry: Function - callback executed on each Exif entry\n//    - entry:  Object\n//      - is_big_endian:  Boolean - whether Exif uses big or little endian byte alignment\n//      - ifd:            Number  - IFD identifier (0 for IFD0, 1 for IFD1, 0x8769 for SubIFD,\n//                                 0x8825 for GPS Info, 0xA005 for Interop IFD)\n//      - tag:            Number  - exif entry tag (0x0110 - camera name, 0x0112 - orientation, etc. - see Exif spec)\n//      - format:         Number  - exif entry format (1 - byte, 2 - ascii, 3 - short, etc. - see Exif spec)\n//      - count:          Number  - number of components of the given format inside data\n//                                 (usually 1, or string length for ascii format)\n//      - entry_offset:   Number  - start of Exif entry (entry length is always 12, so not included)\n//      - data_offset:    Number  - start of data attached to Exif entry (will overlap with entry if length <= 4)\n//      - data_length:    Number  - length of data attached to Exif entry\n//      - value:          Array|String|Null - our best attempt at parsing data (not all formats supported right now)\n//      - is_subifd_link: Boolean - whether this entry is recognized to be a link to subifd (can't filter these out)\n//\n// Iteration stops early if iterator returns `false`.\n//\n// If Exif wasn't found anywhere (before start of the image data, SOS),\n// iterator is never executed.\n//\nmodule.exports.jpeg_exif_tags_each = function (jpeg_bin, on_exif_entry) {\n  if (!is_uint8array(jpeg_bin)) {\n    throw error('Invalid argument (jpeg_bin), Uint8Array expected', 'EINVAL');\n  }\n\n  if (typeof on_exif_entry !== 'function') {\n    throw error('Invalid argument (on_exif_entry), Function expected', 'EINVAL');\n  }\n\n  /* eslint-disable consistent-return */\n  module.exports.jpeg_segments_each(jpeg_bin, function (segment) {\n    if (segment.code === 0xDA /* SOS */) return false;\n\n    // look for APP1 segment and compare header with 'Exif\\0\\0'\n    if (segment.code === 0xE1 && segment.length >= 10 &&\n        jpeg_bin[segment.offset + 4] === 0x45 && jpeg_bin[segment.offset + 5] === 0x78 &&\n        jpeg_bin[segment.offset + 6] === 0x69 && jpeg_bin[segment.offset + 7] === 0x66 &&\n        jpeg_bin[segment.offset + 8] === 0x00 && jpeg_bin[segment.offset + 9] === 0x00) {\n\n      new ExifParser(jpeg_bin, segment.offset + 10, segment.offset + segment.length).each(on_exif_entry);\n      return false;\n    }\n  });\n};\n\n\n// Remove Exif entries in the given JPEG image\n//\n// Input:\n//  - jpeg_bin: Uint8Array - jpeg file\n//  - on_entry: Function - callback executed on each Exif entry\n//    - entry:  Object\n//      - is_big_endian:  Boolean - whether Exif uses big or little endian byte alignment\n//      - ifd:            Number  - IFD identifier (0 for IFD0, 1 for IFD1, 0x8769 for SubIFD,\n//                                  0x8825 for GPS Info, 0xA005 for Interop IFD)\n//      - tag:            Number  - exif entry tag (0x0110 - camera name, 0x0112 - orientation, etc. - see Exif spec)\n//      - format:         Number  - exif entry format (1 - byte, 2 - ascii, 3 - short, etc. - see Exif spec)\n//      - count:          Number  - number of components of the given format inside data\n//                                  (usually 1, or string length for ascii format)\n//      - entry_offset:   Number  - start of Exif entry (entry length is always 12, so not included)\n//      - data_offset:    Number  - start of data attached to Exif entry (will overlap with entry if length <= 4)\n//      - data_length:    Number  - length of data attached to Exif entry\n//      - value:          Array|String|Null - our best attempt at parsing data (not all formats supported right now)\n//      - is_subifd_link: Boolean - whether this entry is recognized to be a link to subifd (can't filter these out)\n//\n// This function removes following from Exif:\n//  - all entries where iterator returned false (except subifd links which are mandatory)\n//  - IFD1 and thumbnail image (the purpose of this function is to reduce file size,\n//    so thumbnail is usually the first thing to go)\n//  - all other data that isn't in IFD0, SubIFD, GPSIFD, InteropIFD\n//    (theoretically possible proprietary extensions, I haven't seen any of these yet)\n//\n// Changing data inside Exif entries is NOT supported yet (modifying `entry` object inside callback may break stuff).\n//\n// If Exif wasn't found anywhere (before start of the image data, SOS),\n// iterator is never executed, and original JPEG is returned as is.\n//\nmodule.exports.jpeg_exif_tags_filter = function (jpeg_bin, on_exif_entry) {\n  if (!is_uint8array(jpeg_bin)) {\n    throw error('Invalid argument (jpeg_bin), Uint8Array expected', 'EINVAL');\n  }\n\n  if (typeof on_exif_entry !== 'function') {\n    throw error('Invalid argument (on_exif_entry), Function expected', 'EINVAL');\n  }\n\n  var stop_search = false;\n\n  return module.exports.jpeg_segments_filter(jpeg_bin, function (segment) {\n    if (stop_search) return;\n    if (segment.code === 0xDA /* SOS */) stop_search = true;\n\n    // look for APP1 segment and compare header with 'Exif\\0\\0'\n    if (segment.code === 0xE1 && segment.length >= 10 &&\n        jpeg_bin[segment.offset + 4] === 0x45 && jpeg_bin[segment.offset + 5] === 0x78 &&\n        jpeg_bin[segment.offset + 6] === 0x69 && jpeg_bin[segment.offset + 7] === 0x66 &&\n        jpeg_bin[segment.offset + 8] === 0x00 && jpeg_bin[segment.offset + 9] === 0x00) {\n\n      var new_exif = new ExifParser(jpeg_bin, segment.offset + 10, segment.offset + segment.length)\n        .filter(on_exif_entry);\n      if (!new_exif) return false;\n\n      var header = new Uint8Array(10);\n\n      header.set(jpeg_bin.slice(segment.offset, segment.offset + 10));\n      header[2] = ((new_exif.length + 8) >>> 8) & 0xFF;\n      header[3] = (new_exif.length + 8) & 0xFF;\n\n      stop_search = true;\n      return [ header, new_exif ];\n    }\n  });\n};\n\n\n// Inserts a custom comment marker segment into JPEG file.\n//\n// Input:\n//  - jpeg_bin: Uint8Array - jpeg file\n//  - comment:  String\n//\n// Comment is inserted after first two bytes (FFD8, SOI).\n//\n// If JFIF (APP0) marker exists immediately after SOI (as mandated by the JFIF\n// spec), we insert comment after it instead.\n//\nmodule.exports.jpeg_add_comment = function (jpeg_bin, comment) {\n  var comment_inserted = false, segment_count = 0;\n\n  return module.exports.jpeg_segments_filter(jpeg_bin, function (segment) {\n    segment_count++;\n    if (segment_count === 1 && segment.code === 0xD8 /* SOI  */) return;\n    if (segment_count === 2 && segment.code === 0xE0 /* APP0 */) return;\n\n    if (comment_inserted) return;\n    comment = utf8_encode(comment);\n\n    // comment segment\n    var csegment = new Uint8Array(5 + comment.length);\n    var offset = 0;\n\n    csegment[offset++] = 0xFF;\n    csegment[offset++] = 0xFE;\n    csegment[offset++] = ((comment.length + 3) >>> 8) & 0xFF;\n    csegment[offset++] = (comment.length + 3) & 0xFF;\n\n    comment.split('').forEach(function (c) {\n      csegment[offset++] = c.charCodeAt(0) & 0xFF;\n    });\n\n    csegment[offset++] = 0;\n    comment_inserted = true;\n\n    return [ csegment, jpeg_bin.subarray(segment.offset, segment.offset + segment.length) ];\n  });\n};\n","\n'use strict';\n\n\nvar image_traverse = require('./image_traverse');\n\n\nfunction jpeg_patch_exif(env) {\n  return this._getUint8Array(env.blob).then(function (data) {\n    env.is_jpeg = image_traverse.is_jpeg(data);\n\n    if (!env.is_jpeg) return Promise.resolve(env);\n\n    env.orig_blob = env.blob;\n\n    try {\n      var exif_is_big_endian, orientation_offset;\n\n      /* eslint-disable consistent-return */\n      image_traverse.jpeg_exif_tags_each(data, function (entry) {\n        if (entry.ifd === 0 && entry.tag === 0x112 && Array.isArray(entry.value)) {\n          env.orientation    = entry.value[0] || 1;\n          exif_is_big_endian = entry.big_endian;\n          orientation_offset = entry.data_offset;\n          return false;\n        }\n      });\n\n      if (orientation_offset) {\n        var orientation_patch = exif_is_big_endian ?\n          new Uint8Array([ 0, 1 ]) :\n          new Uint8Array([ 1, 0 ]);\n\n        env.blob = new Blob([\n          data.slice(0, orientation_offset),\n          orientation_patch,\n          data.slice(orientation_offset + 2)\n        ], { type: 'image/jpeg' });\n      }\n    } catch (_) {}\n\n    return env;\n  });\n}\n\n\nfunction jpeg_rotate_canvas(env) {\n  if (!env.is_jpeg) return Promise.resolve(env);\n\n  var orientation = env.orientation - 1;\n  if (!orientation) return Promise.resolve(env);\n\n  var canvas;\n\n  if (orientation & 4) {\n    canvas = this.pica.options.createCanvas(env.out_canvas.height, env.out_canvas.width);\n  } else {\n    canvas = this.pica.options.createCanvas(env.out_canvas.width, env.out_canvas.height);\n  }\n\n  var ctx = canvas.getContext('2d');\n\n  ctx.save();\n\n  if (orientation & 1) ctx.transform(-1, 0, 0, 1, canvas.width, 0);\n  if (orientation & 2) ctx.transform(-1, 0, 0, -1, canvas.width, canvas.height);\n  if (orientation & 4) ctx.transform(0, 1, 1, 0, 0, 0);\n\n  ctx.drawImage(env.out_canvas, 0, 0);\n  ctx.restore();\n\n  env.out_canvas = canvas;\n\n  return Promise.resolve(env);\n}\n\n\nfunction jpeg_attach_orig_segments(env) {\n  if (!env.is_jpeg) return Promise.resolve(env);\n\n  return Promise.all([\n    this._getUint8Array(env.blob),\n    this._getUint8Array(env.out_blob)\n  ]).then(function (res) {\n    var data = res[0];\n    var data_out = res[1];\n\n    if (image_traverse.is_jpeg(data_out)) return Promise.resolve(env);\n\n    var segments = [];\n\n    image_traverse.jpeg_segments_each(data, function (segment) {\n      if (segment.code === 0xDA /* SOS */) return false;\n      segments.push(segment);\n    });\n\n    segments = segments\n      .filter(function (segment) {\n        if (segment.code === 0xE2) {\n          var hdr = data.slice(segment.offset + 4, segment.offset + 11);\n          if (String.fromCharCode.apply(hdr) === 'ICC_PROFILE') {\n            return false;\n          }\n        }\n\n        // Keep all APPn segments excluding APP2 (ICC_PROFILE),\n        // remove others because most of them depend on image data (DCT and such).\n        //\n        // APP0 - JFIF, APP1 - Exif, the rest are photoshop metadata and such\n        //\n        // See full list at https://www.w3.org/Graphics/JPEG/itu-t81.pdf (table B.1 on page 32)\n        //\n        if (segment.code >= 0xE0 && segment.code < 0xF0) return true;\n\n        // Keep comments\n        //\n        if (segment.code === 0xFE) return true;\n\n        return false;\n      })\n      .map(function (segment) {\n        return data.slice(segment.offset, segment.offset + segment.length);\n      });\n\n    env.blob = new Blob(\n      [ data.slice(0, 20) ].concat(segments).concat([ data.slice(20) ]),\n      { type: 'image/jpeg' }\n    );\n\n    return env;\n  });\n}\n\n\nfunction assign(reducer) {\n  reducer.before('_blob_to_image', jpeg_patch_exif);\n  reducer.after('_transform',      jpeg_rotate_canvas);\n  reducer.after('_create_blob',    jpeg_attach_orig_segments);\n}\n\n\nmodule.exports.jpeg_patch_exif = jpeg_patch_exif;\nmodule.exports.jpeg_rotate_canvas = jpeg_rotate_canvas;\nmodule.exports.jpeg_attach_orig_segments = jpeg_attach_orig_segments;\nmodule.exports.assign = assign;\n","\n'use strict';\n\nvar utils        = require('./lib/utils');\n\nfunction ImageBlobReduce(options) {\n  if (!(this instanceof ImageBlobReduce)) return new ImageBlobReduce(options);\n\n  options = options || {};\n\n  this.pica = options.pica || require('pica')();\n  this.initialized = false;\n\n  this.utils = utils;\n}\n\n\nImageBlobReduce.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\nImageBlobReduce.prototype.init = function () {\n  this.use(require('./lib/jpeg_plugins').assign);\n};\n\n\nImageBlobReduce.prototype.toBlob = function (blob, options) {\n  var opts = utils.assign({ max: Infinity }, options);\n  var env = {\n    blob: blob,\n    opts: opts\n  };\n\n  if (!this.initialized) {\n    this.init();\n    this.initialized = true;\n  }\n\n  return Promise.resolve(env)\n    .then(this._blob_to_image)\n    .then(this._transform)\n    .then(this._cleanup)\n    .then(this._create_blob)\n    .then(function (_env) { return _env.out_blob; });\n};\n\n\n// Temporary alias until 2.x\nImageBlobReduce.prototype.to_blob = ImageBlobReduce.prototype.toBlob;\n\n\nImageBlobReduce.prototype.toCanvas = function (blob, options) {\n  var opts = utils.assign({ max: Infinity }, options);\n  var env = {\n    blob: blob,\n    opts: opts\n  };\n\n  if (!this.initialized) {\n    this.init();\n    this.initialized = true;\n  }\n\n  return Promise.resolve(env)\n    .then(this._blob_to_image)\n    .then(this._transform)\n    .then(this._cleanup)\n    .then(function (_env) { return _env.out_canvas; });\n};\n\n\n// Temporary alias until 2.x\nImageBlobReduce.prototype.to_canvas = ImageBlobReduce.prototype.toCanvas;\n\n\nImageBlobReduce.prototype.before = function (method_name, fn) {\n  if (!this[method_name]) throw new Error('Method \"' + method_name + '\" does not exist');\n  if (typeof fn !== 'function') throw new Error('Invalid argument \"fn\", function expected');\n\n  var old_fn = this[method_name];\n  var self = this;\n\n  this[method_name] = function (env) {\n    return fn.call(self, env).then(function (_env) {\n      return old_fn.call(self, _env);\n    });\n  };\n\n  return this;\n};\n\n\nImageBlobReduce.prototype.after = function (method_name, fn) {\n  if (!this[method_name]) throw new Error('Method \"' + method_name + '\" does not exist');\n  if (typeof fn !== 'function') throw new Error('Invalid argument \"fn\", function expected');\n\n  var old_fn = this[method_name];\n  var self = this;\n\n  this[method_name] = function (env) {\n    return old_fn.call(self, env).then(function (_env) {\n      return fn.call(self, _env);\n    });\n  };\n\n  return this;\n};\n\n\nImageBlobReduce.prototype._blob_to_image = function (env) {\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n  env.image = document.createElement('img');\n  env.image_url = URL.createObjectURL(env.blob);\n  env.image.src = env.image_url;\n\n  return new Promise(function (resolve, reject) {\n    env.image.onerror = function () { reject(new Error('ImageBlobReduce: failed to create Image() from blob')); };\n    env.image.onload = function () { resolve(env); };\n  });\n};\n\n\nImageBlobReduce.prototype._transform = function (env) {\n  var scale_factor = env.opts.max / Math.max(env.image.width, env.image.height);\n\n  if (scale_factor > 1) scale_factor = 1;\n\n  var out_width = Math.max(Math.round(env.image.width * scale_factor), 1);\n  var out_height = Math.max(Math.round(env.image.height * scale_factor), 1);\n\n  env.out_canvas = this.pica.options.createCanvas(out_width, out_height);\n\n  // By default use alpha for png only\n  var pica_opts = { alpha: env.blob.type === 'image/png' };\n\n  // Extract pica options if been passed\n  this.utils.assign(pica_opts, this.utils.pick_pica_resize_options(env.opts));\n\n  return this.pica\n    .resize(env.image, env.out_canvas, pica_opts)\n    .then(function () { return env; });\n};\n\n\nImageBlobReduce.prototype._cleanup = function (env) {\n  env.image.src = '';\n  env.image = null;\n\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  if (URL.revokeObjectURL) URL.revokeObjectURL(env.image_url);\n\n  env.image_url = null;\n\n  return Promise.resolve(env);\n};\n\n\nImageBlobReduce.prototype._create_blob = function (env) {\n  return this.pica.toBlob(env.out_canvas, env.blob.type)\n    .then(function (blob) {\n      env.out_blob = blob;\n      return env;\n    });\n};\n\n\nImageBlobReduce.prototype._getUint8Array = function (blob) {\n  if (blob.arrayBuffer) {\n    return blob.arrayBuffer().then(function (buf) {\n      return new Uint8Array(buf);\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var fr = new FileReader();\n\n    fr.readAsArrayBuffer(blob);\n\n    fr.onload = function () { resolve(new Uint8Array(fr.result)); };\n    fr.onerror = function () {\n      reject(new Error('ImageBlobReduce: failed to load data from input blob'));\n      fr.abort();\n    };\n    fr.onabort = function () {\n      reject(new Error('ImageBlobReduce: failed to load data from input blob (aborted)'));\n    };\n  });\n};\n\n\nmodule.exports = ImageBlobReduce;\nmodule.exports.pica = require('pica');\n","const reduce = require(\"image-blob-reduce\")();\nconst imageService = {\n  handleImage: (source, callback) => {\n    let fileSize = source.size;\n    try {\n      // don't use image reduction for iOS as it's problematic.\n      // TODO: Find a fix and test those platforms.\n      let iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n      if (iOS) {\n        console.warn(\"Do not use image reduction on iOS !\");\n        callback(source);\n        return;\n      }\n      if (!source.type || !source.type.match(/image/)) {\n        console.warn(\"Do not use image reduction on invalid file !\");\n        callback(source);\n        return;\n      }\n      if (source.type == \"image/gif\") {\n        console.warn(\"Do not use image reduction on a gif !\");\n        callback(source);\n        return;\n      }\n      if (fileSize < 1024 * 256) {\n        console.warn(\"Do not use image reduction on small file !\");\n        callback(source);\n        return;\n      }\n      reduce.toBlob(source, {max: 2048, unsharpAmount: 100, unsharpRadius: 1, quality: 2}).then(blob => callback(blob));\n    } catch (error) {\n      // TODO error logging\n      console.warn(error);\n      // If something goes wrong in image reduction, fall back to normal upload\n      callback(source);\n    }\n  }\n};\nexport default imageService;\n"]}