# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  database_url: '%env(resolve:DATABASE_URL)%'
  binaries.ffmpeg: '%env(resolve:FFMPEG_PATH)%'
  dir.public: '%kernel.project_dir%/../public'
  dir.files: '%env(resolve:dir_files)%'
  dir.cache: '%env(resolve:dir_cache)%'

services:
    # default configuration for services in *this* file
    _defaults:
      autowire: true      # Automatically injects dependencies in your services.
      autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
      public: false       # Allows optimizing the container by removing unused services; this also means
                          # fetching services directly from the container via $container->get() won't work.
                          # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
      resource: '../src/*'
      exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
      resource: '../src/Controller'
      tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\TerminateListener:
      tags:
        - { name: kernel.event_listener, event: kernel.terminate, priority: -2048 }

    ApiPlatform\Core\Serializer\ItemNormalizer: ~

    App\Serializer\ItemNormalizer:
      decorates: ApiPlatform\Core\Serializer\ItemNormalizer

    App\Controller\Security:
      arguments:
        $logger: '@monolog.logger.db'

    App\Command\Cron:
      arguments:
        $logger: '@monolog.logger.db'

    App\Command\RepairDatabase:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $logger: '@monolog.logger.db'

    App\Command\PreparePreviews:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $logger: '@monolog.logger.db'

    App\Command\ConvertVideo:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'
        $binaryFfmpeg: '%env(resolve:FFMPEG_PATH)%'
        $logger: '@monolog.logger.db'

    App\Command\ConvertImages:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'
        $logger: '@monolog.logger.db'

    App\Command\CleanCache:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_cache)%'
        $logger: '@monolog.logger.db'

    App\Command\CleanFiles:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'
        $logger: '@monolog.logger.db'

    App\Command\CleanGroups:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $logger: '@monolog.logger.db'

    App\Command\CleanMessages:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $logger: '@monolog.logger.db'

    App\Command\CleanLogs:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $logger: '@monolog.logger.db'

    App\Service\Mailer:
      arguments:
        - '@mailer'
        - '@twig'
        - '%env(resolve:DOMAIN)%'
        - '%env(resolve:LANG)%'

    App\Service\Cache:
      arguments:
        - '@apcu_adapter'

    apcu_adapter:
      class: Symfony\Component\Cache\Adapter\ApcuAdapter
      arguments:
        - '%env(resolve:DOMAIN)%'
        - 0
        - '%env(resolve:VERSION)%'

    App\Service\Namer:
      public: true
